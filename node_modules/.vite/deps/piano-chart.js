import "./chunk-PZ5AY32C.js";

// node_modules/piano-chart/piano-chart.esm.js
var t = {};
var e = [];
function i(e2, n2) {
  if (Array.isArray(e2)) for (const t2 of e2) i(t2, n2);
  else if ("object" != typeof e2) s(Object.getOwnPropertyNames(n2)), t[e2] = Object.assign(t[e2] || {}, n2);
  else for (const t2 in e2) i(t2, e2[t2]);
}
function n(e2) {
  return t[e2] || {};
}
function s(t2) {
  e.push(...t2);
}
function r(t2, e2) {
  var i2, n2 = t2.length, s2 = [];
  for (i2 = 0; i2 < n2; i2++) s2.push(e2(t2[i2]));
  return s2;
}
function h(t2) {
  return t2 % 360 * Math.PI / 180;
}
function o(t2) {
  return t2.toLowerCase().replace(/-(.)/g, function(t3, e2) {
    return e2.toUpperCase();
  });
}
function a(t2) {
  return t2.charAt(0).toUpperCase() + t2.slice(1);
}
function u(t2, e2, i2, n2) {
  return null != e2 && null != i2 || (n2 = n2 || t2.bbox(), null == e2 ? e2 = n2.width / n2.height * i2 : null == i2 && (i2 = n2.height / n2.width * e2)), { width: e2, height: i2 };
}
function l(t2, e2) {
  const i2 = t2.origin;
  let n2, s2;
  if ("string" == typeof i2 || null == i2) {
    const r2 = (i2 || "center").toLowerCase().trim(), { height: h2, width: o2, x: a2, y: u2 } = e2.bbox(), l2 = r2.includes("left") ? a2 : r2.includes("right") ? a2 + o2 : a2 + o2 / 2, c2 = r2.includes("top") ? u2 : r2.includes("bottom") ? u2 + h2 : u2 + h2 / 2;
    n2 = null != t2.ox ? t2.ox : l2, s2 = null != t2.oy ? t2.oy : c2;
  } else n2 = i2[0], s2 = i2[1];
  return [n2, s2];
}
var c = "http://www.w3.org/2000/svg";
var d = "http://www.w3.org/2000/xmlns/";
var f = "http://www.w3.org/1999/xlink";
var p = { window: "undefined" == typeof window ? null : window, document: "undefined" == typeof document ? null : document };
var m = class {
};
var y = {};
var g = "___SYMBOL___ROOT___";
function v(t2) {
  return p.document.createElementNS(c, t2);
}
function _(t2) {
  if (t2 instanceof m) return t2;
  if ("object" == typeof t2) return x(t2);
  if (null == t2) return new y[g]();
  if ("string" == typeof t2 && "<" !== t2.charAt(0)) return x(p.document.querySelector(t2));
  var e2 = v("svg");
  return e2.innerHTML = t2, t2 = x(e2.firstChild);
}
function w(t2, e2) {
  return e2 instanceof p.window.Node ? e2 : v(t2);
}
function b(t2) {
  if (!t2) return null;
  if (t2.instance instanceof m) return t2.instance;
  var e2 = a(t2.nodeName || "Dom");
  return "LinearGradient" === e2 || "RadialGradient" === e2 ? e2 = "Gradient" : y[e2] || (e2 = "Dom"), new y[e2](t2);
}
var x = b;
function O(t2, e2 = t2.name, i2 = false) {
  return y[e2] = t2, i2 && (y[g] = t2), s(Object.getOwnPropertyNames(t2.prototype)), t2;
}
var N = 1e3;
function S(t2) {
  return "Svgjs" + a(t2) + N++;
}
function k(t2, e2, i2) {
  var n2, s2;
  for (s2 = (t2 = Array.isArray(t2) ? t2 : [t2]).length - 1; s2 >= 0; s2--) for (n2 in e2) {
    let r2 = e2[n2];
    i2 && (r2 = T(e2[n2])), t2[s2].prototype[n2] = r2;
  }
}
function T(t2) {
  return function(...e2) {
    const i2 = e2[e2.length - 1];
    return !i2 || i2.constructor !== Object || i2 instanceof Array ? t2.apply(this, e2) : t2.apply(this, e2.slice(0, -1)).attr(i2);
  };
}
i("Dom", { siblings: function() {
  return this.parent().children();
}, position: function() {
  return this.parent().index(this);
}, next: function() {
  return this.siblings()[this.position() + 1];
}, prev: function() {
  return this.siblings()[this.position() - 1];
}, forward: function() {
  var t2 = this.position() + 1, e2 = this.parent();
  return e2.removeElement(this).add(this, t2), "function" == typeof e2.isRoot && e2.isRoot() && e2.node.appendChild(e2.defs().node), this;
}, backward: function() {
  var t2 = this.position();
  return t2 > 0 && this.parent().removeElement(this).add(this, t2 - 1), this;
}, front: function() {
  var t2 = this.parent();
  return t2.node.appendChild(this.node), "function" == typeof t2.isRoot && t2.isRoot() && t2.node.appendChild(t2.defs().node), this;
}, back: function() {
  return this.position() > 0 && this.parent().removeElement(this).add(this, 0), this;
}, before: function(t2) {
  (t2 = _(t2)).remove();
  var e2 = this.position();
  return this.parent().add(t2, e2), this;
}, after: function(t2) {
  (t2 = _(t2)).remove();
  var e2 = this.position();
  return this.parent().add(t2, e2 + 1), this;
}, insertBefore: function(t2) {
  return (t2 = _(t2)).before(this), this;
}, insertAfter: function(t2) {
  return (t2 = _(t2)).after(this), this;
} });
var M = /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i;
var A = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;
var C = /rgb\((\d+),(\d+),(\d+)\)/;
var E = /(#[a-z0-9\-_]+)/i;
var I = /\)\s*,?\s*/;
var j = /\s/g;
var L = /^#[a-f0-9]{3,6}$/i;
var H = /^rgb\(/;
var D = /^(\s+)?$/;
var z = /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;
var P = /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i;
var R = /[\s,]+/;
var K = /([^e])-/gi;
var F = /[MLHVCSQTAZ]/gi;
var q = /[MLHVCSQTAZ]/i;
var W = /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi;
var Y = /\./g;
i("Dom", { classes: function() {
  var t2 = this.attr("class");
  return null == t2 ? [] : t2.trim().split(R);
}, hasClass: function(t2) {
  return -1 !== this.classes().indexOf(t2);
}, addClass: function(t2) {
  if (!this.hasClass(t2)) {
    var e2 = this.classes();
    e2.push(t2), this.attr("class", e2.join(" "));
  }
  return this;
}, removeClass: function(t2) {
  return this.hasClass(t2) && this.attr("class", this.classes().filter(function(e2) {
    return e2 !== t2;
  }).join(" ")), this;
}, toggleClass: function(t2) {
  return this.hasClass(t2) ? this.removeClass(t2) : this.addClass(t2);
} }), i("Dom", { css: function(t2, e2) {
  const i2 = {};
  if (0 === arguments.length) return this.node.style.cssText.split(/\s*;\s*/).filter(function(t3) {
    return !!t3.length;
  }).forEach(function(t3) {
    const e3 = t3.split(/\s*:\s*/);
    i2[e3[0]] = e3[1];
  }), i2;
  if (arguments.length < 2) {
    if (Array.isArray(t2)) {
      for (const e3 of t2) {
        const t3 = o(e3);
        i2[t3] = this.node.style[t3];
      }
      return i2;
    }
    if ("string" == typeof t2) return this.node.style[o(t2)];
    if ("object" == typeof t2) for (const e3 in t2) this.node.style[o(e3)] = null == t2[e3] || D.test(t2[e3]) ? "" : t2[e3];
  }
  return 2 === arguments.length && (this.node.style[o(t2)] = null == e2 || D.test(e2) ? "" : e2), this;
}, show: function() {
  return this.css("display", "");
}, hide: function() {
  return this.css("display", "none");
}, visible: function() {
  return "none" !== this.css("display");
} }), i("Dom", { data: function(t2, e2, i2) {
  if ("object" == typeof t2) for (e2 in t2) this.data(e2, t2[e2]);
  else if (arguments.length < 2) try {
    return JSON.parse(this.attr("data-" + t2));
  } catch (e3) {
    return this.attr("data-" + t2);
  }
  else this.attr("data-" + t2, null === e2 ? null : true === i2 || "string" == typeof e2 || "number" == typeof e2 ? e2 : JSON.stringify(e2));
  return this;
} }), i("Dom", { remember: function(t2, e2) {
  if ("object" == typeof arguments[0]) for (var i2 in t2) this.remember(i2, t2[i2]);
  else {
    if (1 === arguments.length) return this.memory()[t2];
    this.memory()[t2] = e2;
  }
  return this;
}, forget: function() {
  if (0 === arguments.length) this._memory = {};
  else for (var t2 = arguments.length - 1; t2 >= 0; t2--) delete this.memory()[arguments[t2]];
  return this;
}, memory: function() {
  return this._memory = this._memory || {};
} });
var B = 0;
var U = {};
function X(t2) {
  let e2 = t2.getEventHolder();
  return e2 === p.window && (e2 = U), e2.events || (e2.events = {}), e2.events;
}
function G(t2) {
  return t2.getEventTarget();
}
function V(t2, e2, i2, n2, s2) {
  var r2 = i2.bind(n2 || t2), h2 = _(t2), o2 = X(h2), a2 = G(h2);
  e2 = Array.isArray(e2) ? e2 : e2.split(R), i2._svgjsListenerId || (i2._svgjsListenerId = ++B), e2.forEach(function(t3) {
    var e3 = t3.split(".")[0], n3 = t3.split(".")[1] || "*";
    o2[e3] = o2[e3] || {}, o2[e3][n3] = o2[e3][n3] || {}, o2[e3][n3][i2._svgjsListenerId] = r2, a2.addEventListener(e3, r2, s2 || false);
  });
}
function $(t2, e2, i2, n2) {
  var s2 = _(t2), r2 = X(s2), h2 = G(s2);
  ("function" != typeof i2 || (i2 = i2._svgjsListenerId)) && (e2 = Array.isArray(e2) ? e2 : (e2 || "").split(R)).forEach(function(t3) {
    var e3, o2, a2 = t3 && t3.split(".")[0], u2 = t3 && t3.split(".")[1];
    if (i2) r2[a2] && r2[a2][u2 || "*"] && (h2.removeEventListener(a2, r2[a2][u2 || "*"][i2], n2 || false), delete r2[a2][u2 || "*"][i2]);
    else if (a2 && u2) {
      if (r2[a2] && r2[a2][u2]) {
        for (o2 in r2[a2][u2]) $(h2, [a2, u2].join("."), o2);
        delete r2[a2][u2];
      }
    } else if (u2) for (t3 in r2) for (e3 in r2[t3]) u2 === e3 && $(h2, [t3, u2].join("."));
    else if (a2) {
      if (r2[a2]) {
        for (e3 in r2[a2]) $(h2, [a2, e3].join("."));
        delete r2[a2];
      }
    } else {
      for (t3 in r2) $(h2, t3);
      !function(t4) {
        const e4 = t4.getEventHolder();
        e4.events && (e4.events = {});
      }(s2);
    }
  });
}
function Q(t2) {
  const e2 = Math.round(t2), i2 = Math.max(0, Math.min(255, e2)).toString(16);
  return 1 === i2.length ? "0" + i2 : i2;
}
function Z(t2, e2) {
  for (let i2 = e2.length; i2--; ) if (null == t2[e2[i2]]) return false;
  return true;
}
function J(t2, e2, i2) {
  return i2 < 0 && (i2 += 1), i2 > 1 && (i2 -= 1), i2 < 1 / 6 ? t2 + 6 * (e2 - t2) * i2 : i2 < 0.5 ? e2 : i2 < 2 / 3 ? t2 + (e2 - t2) * (2 / 3 - i2) * 6 : t2;
}
var tt = class _tt {
  constructor(...t2) {
    this.init(...t2);
  }
  init(t2 = 0, e2 = 0, i2 = 0, n2 = 0, s2 = "rgb") {
    if (t2 = t2 || 0, this.space) for (const t3 in this.space) delete this[this.space[t3]];
    if ("number" == typeof t2) s2 = "string" == typeof n2 ? n2 : s2, n2 = "string" == typeof n2 ? 0 : n2, Object.assign(this, { _a: t2, _b: e2, _c: i2, _d: n2, space: s2 });
    else if (t2 instanceof Array) this.space = e2 || ("string" == typeof t2[3] ? t2[3] : t2[4]) || "rgb", Object.assign(this, { _a: t2[0], _b: t2[1], _c: t2[2], _d: t2[3] || 0 });
    else if (t2 instanceof Object) {
      const i3 = function(t3, e3) {
        const i4 = Z(t3, "rgb") ? { _a: t3.r, _b: t3.g, _c: t3.b, space: "rgb" } : Z(t3, "xyz") ? { _a: t3.x, _b: t3.y, _c: t3.z, _d: 0, space: "xyz" } : Z(t3, "hsl") ? { _a: t3.h, _b: t3.s, _c: t3.l, _d: 0, space: "hsl" } : Z(t3, "lab") ? { _a: t3.l, _b: t3.a, _c: t3.b, _d: 0, space: "lab" } : Z(t3, "lch") ? { _a: t3.l, _b: t3.c, _c: t3.h, _d: 0, space: "lch" } : Z(t3, "cmyk") ? { _a: t3.c, _b: t3.m, _c: t3.y, _d: t3.k, space: "cmyk" } : { _a: 0, _b: 0, _c: 0, space: "rgb" };
        return i4.space = e3 || i4.space, i4;
      }(t2, e2);
      Object.assign(this, i3);
    } else if ("string" == typeof t2) if (H.test(t2)) {
      const e3 = t2.replace(j, ""), [i3, n3, s3] = C.exec(e3).slice(1, 4).map((t3) => parseInt(t3));
      Object.assign(this, { _a: i3, _b: n3, _c: s3, _d: 0, space: "rgb" });
    } else {
      if (!L.test(t2)) throw Error("Unsupported string format, can't construct Color");
      {
        const e3 = (t3) => parseInt(t3, 16), [, i3, n3, s3] = A.exec(function(t3) {
          return 4 === t3.length ? ["#", t3.substring(1, 2), t3.substring(1, 2), t3.substring(2, 3), t3.substring(2, 3), t3.substring(3, 4), t3.substring(3, 4)].join("") : t3;
        }(t2)).map(e3);
        Object.assign(this, { _a: i3, _b: n3, _c: s3, _d: 0, space: "rgb" });
      }
    }
    const { _a: r2, _b: h2, _c: o2, _d: a2 } = this, u2 = "rgb" === this.space ? { r: r2, g: h2, b: o2 } : "xyz" === this.space ? { x: r2, y: h2, z: o2 } : "hsl" === this.space ? { h: r2, s: h2, l: o2 } : "lab" === this.space ? { l: r2, a: h2, b: o2 } : "lch" === this.space ? { l: r2, c: h2, h: o2 } : "cmyk" === this.space ? { c: r2, m: h2, y: o2, k: a2 } : {};
    Object.assign(this, u2);
  }
  rgb() {
    if ("rgb" === this.space) return this;
    if ("lab" === (t2 = this.space) || "xyz" === t2 || "lch" === t2) {
      let { x: t3, y: e2, z: i2 } = this;
      if ("lab" === this.space || "lch" === this.space) {
        let { l: n3, a: s3, b: r3 } = this;
        if ("lch" === this.space) {
          const { c: t4, h: e3 } = this, i3 = Math.PI / 180;
          s3 = t4 * Math.cos(i3 * e3), r3 = t4 * Math.sin(i3 * e3);
        }
        const h3 = (n3 + 16) / 116, o3 = s3 / 500 + h3, a3 = h3 - r3 / 200, u3 = 16 / 116, l3 = 8856e-6, c2 = 7.787;
        t3 = 0.95047 * (o3 ** 3 > l3 ? o3 ** 3 : (o3 - u3) / c2), e2 = 1 * (h3 ** 3 > l3 ? h3 ** 3 : (h3 - u3) / c2), i2 = 1.08883 * (a3 ** 3 > l3 ? a3 ** 3 : (a3 - u3) / c2);
      }
      const n2 = 3.2406 * t3 + -1.5372 * e2 + -0.4986 * i2, s2 = -0.9689 * t3 + 1.8758 * e2 + 0.0415 * i2, r2 = 0.0557 * t3 + -0.204 * e2 + 1.057 * i2, h2 = Math.pow, o2 = 31308e-7, a2 = n2 > o2 ? 1.055 * h2(n2, 1 / 2.4) - 0.055 : 12.92 * n2, u2 = s2 > o2 ? 1.055 * h2(s2, 1 / 2.4) - 0.055 : 12.92 * s2, l2 = r2 > o2 ? 1.055 * h2(r2, 1 / 2.4) - 0.055 : 12.92 * r2;
      return new _tt(255 * a2, 255 * u2, 255 * l2);
    }
    if ("hsl" === this.space) {
      let { h: t3, s: e2, l: i2 } = this;
      if (t3 /= 360, e2 /= 100, i2 /= 100, 0 === e2) {
        return i2 *= 255, new _tt(i2, i2, i2);
      }
      const n2 = i2 < 0.5 ? i2 * (1 + e2) : i2 + e2 - i2 * e2, s2 = 2 * i2 - n2, r2 = 255 * J(s2, n2, t3 + 1 / 3), h2 = 255 * J(s2, n2, t3), o2 = 255 * J(s2, n2, t3 - 1 / 3);
      return new _tt(r2, h2, o2);
    }
    if ("cmyk" === this.space) {
      const { c: t3, m: e2, y: i2, k: n2 } = this, s2 = 255 * (1 - Math.min(1, t3 * (1 - n2) + n2)), r2 = 255 * (1 - Math.min(1, e2 * (1 - n2) + n2)), h2 = 255 * (1 - Math.min(1, i2 * (1 - n2) + n2));
      return new _tt(s2, r2, h2);
    }
    return this;
    var t2;
  }
  lab() {
    const { x: t2, y: e2, z: i2 } = this.xyz();
    return new _tt(116 * e2 - 16, 500 * (t2 - e2), 200 * (e2 - i2), "lab");
  }
  xyz() {
    const { _a: t2, _b: e2, _c: i2 } = this.rgb(), [n2, s2, r2] = [t2, e2, i2].map((t3) => t3 / 255), h2 = n2 > 0.04045 ? Math.pow((n2 + 0.055) / 1.055, 2.4) : n2 / 12.92, o2 = s2 > 0.04045 ? Math.pow((s2 + 0.055) / 1.055, 2.4) : s2 / 12.92, a2 = r2 > 0.04045 ? Math.pow((r2 + 0.055) / 1.055, 2.4) : r2 / 12.92, u2 = (0.4124 * h2 + 0.3576 * o2 + 0.1805 * a2) / 0.95047, l2 = (0.2126 * h2 + 0.7152 * o2 + 0.0722 * a2) / 1, c2 = (0.0193 * h2 + 0.1192 * o2 + 0.9505 * a2) / 1.08883, d2 = u2 > 8856e-6 ? Math.pow(u2, 1 / 3) : 7.787 * u2 + 16 / 116, f2 = l2 > 8856e-6 ? Math.pow(l2, 1 / 3) : 7.787 * l2 + 16 / 116, p2 = c2 > 8856e-6 ? Math.pow(c2, 1 / 3) : 7.787 * c2 + 16 / 116;
    return new _tt(d2, f2, p2, "xyz");
  }
  lch() {
    const { l: t2, a: e2, b: i2 } = this.lab(), n2 = Math.sqrt(e2 ** 2 + i2 ** 2);
    let s2 = 180 * Math.atan2(i2, e2) / Math.PI;
    return s2 < 0 && (s2 *= -1, s2 = 360 - s2), new _tt(t2, n2, s2, "lch");
  }
  hsl() {
    const { _a: t2, _b: e2, _c: i2 } = this.rgb(), [n2, s2, r2] = [t2, e2, i2].map((t3) => t3 / 255), h2 = Math.max(n2, s2, r2), o2 = Math.min(n2, s2, r2), a2 = (h2 + o2) / 2, u2 = h2 === o2, l2 = h2 - o2;
    return new _tt(360 * (u2 ? 0 : h2 === n2 ? ((s2 - r2) / l2 + (s2 < r2 ? 6 : 0)) / 6 : h2 === s2 ? ((r2 - n2) / l2 + 2) / 6 : h2 === r2 ? ((n2 - s2) / l2 + 4) / 6 : 0), 100 * (u2 ? 0 : a2 > 0.5 ? l2 / (2 - h2 - o2) : l2 / (h2 + o2)), 100 * a2, "hsl");
  }
  cmyk() {
    const { _a: t2, _b: e2, _c: i2 } = this.rgb(), [n2, s2, r2] = [t2, e2, i2].map((t3) => t3 / 255), h2 = Math.min(1 - n2, 1 - s2, 1 - r2);
    return 1 === h2 ? new _tt(0, 0, 0, 1, "cmyk") : new _tt((1 - n2 - h2) / (1 - h2), (1 - s2 - h2) / (1 - h2), (1 - r2 - h2) / (1 - h2), h2, "cmyk");
  }
  _clamped() {
    const { _a: t2, _b: e2, _c: i2 } = this.rgb(), { max: n2, min: s2, round: r2 } = Math;
    return [t2, e2, i2].map((t3) => n2(0, s2(r2(t3), 255)));
  }
  toHex() {
    const [t2, e2, i2] = this._clamped().map(Q);
    return `#${t2}${e2}${i2}`;
  }
  toString() {
    return this.toHex();
  }
  toRgb() {
    const [t2, e2, i2] = this._clamped();
    return `rgb(${t2},${e2},${i2})`;
  }
  toArray() {
    const { _a: t2, _b: e2, _c: i2, _d: n2, space: s2 } = this;
    return [t2, e2, i2, n2, s2];
  }
  static random(t2 = "vibrant", e2, i2) {
    const { random: n2, round: s2, sin: r2, PI: h2 } = Math;
    if ("vibrant" === t2) {
      const t3 = 24 * n2() + 57, e3 = 38 * n2() + 45, i3 = 360 * n2();
      return new _tt(t3, e3, i3, "lch");
    }
    if ("sine" === t2) {
      const t3 = s2(80 * r2(2 * h2 * (e2 = null == e2 ? n2() : e2) / 0.5 + 0.01) + 150), i3 = s2(50 * r2(2 * h2 * e2 / 0.5 + 4.6) + 200), o2 = s2(100 * r2(2 * h2 * e2 / 0.5 + 2.3) + 150);
      return new _tt(t3, i3, o2);
    }
    if ("pastel" === t2) {
      const t3 = 8 * n2() + 86, e3 = 17 * n2() + 9, i3 = 360 * n2();
      return new _tt(t3, e3, i3, "lch");
    }
    if ("dark" === t2) {
      const t3 = 10 + 10 * n2(), e3 = 50 * n2() + 86, i3 = 360 * n2();
      return new _tt(t3, e3, i3, "lch");
    }
    if ("rgb" === t2) {
      const t3 = 255 * n2(), e3 = 255 * n2(), i3 = 255 * n2();
      return new _tt(t3, e3, i3);
    }
    if ("lab" === t2) {
      const t3 = 100 * n2(), e3 = 256 * n2() - 128, i3 = 256 * n2() - 128;
      return new _tt(t3, e3, i3, "lab");
    }
    if ("grey" === t2) {
      const t3 = 255 * n2();
      return new _tt(t3, t3, t3);
    }
  }
  static test(t2) {
    return "string" == typeof t2 && (L.test(t2) || H.test(t2));
  }
  static isRgb(t2) {
    return t2 && "number" == typeof t2.r && "number" == typeof t2.g && "number" == typeof t2.b;
  }
  static isColor(t2) {
    return t2 && (t2 instanceof _tt || this.isRgb(t2) || this.test(t2));
  }
};
var et = class _et {
  constructor(...t2) {
    this.init(...t2);
  }
  init(t2, e2) {
    const i2 = 0, n2 = 0, s2 = Array.isArray(t2) ? { x: t2[0], y: t2[1] } : "object" == typeof t2 ? { x: t2.x, y: t2.y } : { x: t2, y: e2 };
    return this.x = null == s2.x ? i2 : s2.x, this.y = null == s2.y ? n2 : s2.y, this;
  }
  clone() {
    return new _et(this);
  }
  transform(t2) {
    return this.clone().transformO(t2);
  }
  transformO(t2) {
    nt.isMatrixLike(t2) || (t2 = new nt(t2));
    const { x: e2, y: i2 } = this;
    return this.x = t2.a * e2 + t2.c * i2 + t2.e, this.y = t2.b * e2 + t2.d * i2 + t2.f, this;
  }
  toArray() {
    return [this.x, this.y];
  }
};
function it(t2, e2, i2) {
  return Math.abs(e2 - t2) < (i2 || 1e-6);
}
var nt = class _nt {
  constructor(...t2) {
    this.init(...t2);
  }
  init(t2) {
    var e2 = _nt.fromArray([1, 0, 0, 1, 0, 0]);
    return t2 = t2 instanceof xt ? t2.matrixify() : "string" == typeof t2 ? _nt.fromArray(t2.split(R).map(parseFloat)) : Array.isArray(t2) ? _nt.fromArray(t2) : "object" == typeof t2 && _nt.isMatrixLike(t2) ? t2 : "object" == typeof t2 ? new _nt().transform(t2) : 6 === arguments.length ? _nt.fromArray([].slice.call(arguments)) : e2, this.a = null != t2.a ? t2.a : e2.a, this.b = null != t2.b ? t2.b : e2.b, this.c = null != t2.c ? t2.c : e2.c, this.d = null != t2.d ? t2.d : e2.d, this.e = null != t2.e ? t2.e : e2.e, this.f = null != t2.f ? t2.f : e2.f, this;
  }
  clone() {
    return new _nt(this);
  }
  transform(t2) {
    if (_nt.isMatrixLike(t2)) return new _nt(t2).multiplyO(this);
    var e2 = _nt.formatTransforms(t2);
    const { x: i2, y: n2 } = new et(e2.ox, e2.oy).transform(this);
    var s2 = new _nt().translateO(e2.rx, e2.ry).lmultiplyO(this).translateO(-i2, -n2).scaleO(e2.scaleX, e2.scaleY).skewO(e2.skewX, e2.skewY).shearO(e2.shear).rotateO(e2.theta).translateO(i2, n2);
    if (isFinite(e2.px) || isFinite(e2.py)) {
      const t3 = new et(i2, n2).transform(s2), r2 = e2.px ? e2.px - t3.x : 0, h2 = e2.py ? e2.py - t3.y : 0;
      s2.translateO(r2, h2);
    }
    return s2.translateO(e2.tx, e2.ty), s2;
  }
  compose(t2) {
    t2.origin && (t2.originX = t2.origin[0], t2.originY = t2.origin[1]);
    var e2 = t2.originX || 0, i2 = t2.originY || 0, n2 = t2.scaleX || 1, s2 = t2.scaleY || 1, r2 = t2.shear || 0, h2 = t2.rotate || 0, o2 = t2.translateX || 0, a2 = t2.translateY || 0;
    return new _nt().translateO(-e2, -i2).scaleO(n2, s2).shearO(r2).rotateO(h2).translateO(o2, a2).lmultiplyO(this).translateO(e2, i2);
  }
  decompose(t2 = 0, e2 = 0) {
    var i2 = this.a, n2 = this.b, s2 = this.c, r2 = this.d, h2 = this.e, o2 = this.f, a2 = i2 * r2 - n2 * s2, u2 = a2 > 0 ? 1 : -1, l2 = u2 * Math.sqrt(i2 * i2 + n2 * n2), c2 = Math.atan2(u2 * n2, u2 * i2), d2 = 180 / Math.PI * c2, f2 = Math.cos(c2), p2 = Math.sin(c2), m2 = (i2 * s2 + n2 * r2) / a2, y2 = s2 * l2 / (m2 * i2 - n2) || r2 * l2 / (m2 * n2 + i2);
    return { scaleX: l2, scaleY: y2, shear: m2, rotate: d2, translateX: h2 - t2 + t2 * f2 * l2 + e2 * (m2 * f2 * l2 - p2 * y2), translateY: o2 - e2 + t2 * p2 * l2 + e2 * (m2 * p2 * l2 + f2 * y2), originX: t2, originY: e2, a: this.a, b: this.b, c: this.c, d: this.d, e: this.e, f: this.f };
  }
  multiply(t2) {
    return this.clone().multiplyO(t2);
  }
  multiplyO(t2) {
    var e2 = t2 instanceof _nt ? t2 : new _nt(t2);
    return _nt.matrixMultiply(this, e2, this);
  }
  lmultiply(t2) {
    return this.clone().lmultiplyO(t2);
  }
  lmultiplyO(t2) {
    var e2 = t2 instanceof _nt ? t2 : new _nt(t2);
    return _nt.matrixMultiply(e2, this, this);
  }
  inverseO() {
    var t2 = this.a, e2 = this.b, i2 = this.c, n2 = this.d, s2 = this.e, r2 = this.f, h2 = t2 * n2 - e2 * i2;
    if (!h2) throw new Error("Cannot invert " + this);
    var o2 = n2 / h2, a2 = -e2 / h2, u2 = -i2 / h2, l2 = t2 / h2, c2 = -(o2 * s2 + u2 * r2), d2 = -(a2 * s2 + l2 * r2);
    return this.a = o2, this.b = a2, this.c = u2, this.d = l2, this.e = c2, this.f = d2, this;
  }
  inverse() {
    return this.clone().inverseO();
  }
  translate(t2, e2) {
    return this.clone().translateO(t2, e2);
  }
  translateO(t2, e2) {
    return this.e += t2 || 0, this.f += e2 || 0, this;
  }
  scale(t2, e2, i2, n2) {
    return this.clone().scaleO(...arguments);
  }
  scaleO(t2, e2 = t2, i2 = 0, n2 = 0) {
    3 === arguments.length && (n2 = i2, i2 = e2, e2 = t2);
    const { a: s2, b: r2, c: h2, d: o2, e: a2, f: u2 } = this;
    return this.a = s2 * t2, this.b = r2 * e2, this.c = h2 * t2, this.d = o2 * e2, this.e = a2 * t2 - i2 * t2 + i2, this.f = u2 * e2 - n2 * e2 + n2, this;
  }
  rotate(t2, e2, i2) {
    return this.clone().rotateO(t2, e2, i2);
  }
  rotateO(t2, e2 = 0, i2 = 0) {
    t2 = h(t2);
    const n2 = Math.cos(t2), s2 = Math.sin(t2), { a: r2, b: o2, c: a2, d: u2, e: l2, f: c2 } = this;
    return this.a = r2 * n2 - o2 * s2, this.b = o2 * n2 + r2 * s2, this.c = a2 * n2 - u2 * s2, this.d = u2 * n2 + a2 * s2, this.e = l2 * n2 - c2 * s2 + i2 * s2 - e2 * n2 + e2, this.f = c2 * n2 + l2 * s2 - e2 * s2 - i2 * n2 + i2, this;
  }
  flip(t2, e2) {
    return this.clone().flipO(t2, e2);
  }
  flipO(t2, e2) {
    return "x" === t2 ? this.scaleO(-1, 1, e2, 0) : "y" === t2 ? this.scaleO(1, -1, 0, e2) : this.scaleO(-1, -1, t2, e2 || t2);
  }
  shear(t2, e2, i2) {
    return this.clone().shearO(t2, e2, i2);
  }
  shearO(t2, e2 = 0, i2 = 0) {
    const { a: n2, b: s2, c: r2, d: h2, e: o2, f: a2 } = this;
    return this.a = n2 + s2 * t2, this.c = r2 + h2 * t2, this.e = o2 + a2 * t2 - i2 * t2, this;
  }
  skew(t2, e2, i2, n2) {
    return this.clone().skewO(...arguments);
  }
  skewO(t2, e2 = t2, i2 = 0, n2 = 0) {
    3 === arguments.length && (n2 = i2, i2 = e2, e2 = t2), t2 = h(t2), e2 = h(e2);
    const s2 = Math.tan(t2), r2 = Math.tan(e2), { a: o2, b: a2, c: u2, d: l2, e: c2, f: d2 } = this;
    return this.a = o2 + a2 * s2, this.b = a2 + o2 * r2, this.c = u2 + l2 * s2, this.d = l2 + u2 * r2, this.e = c2 + d2 * s2 - n2 * s2, this.f = d2 + c2 * r2 - i2 * r2, this;
  }
  skewX(t2, e2, i2) {
    return this.skew(t2, 0, e2, i2);
  }
  skewXO(t2, e2, i2) {
    return this.skewO(t2, 0, e2, i2);
  }
  skewY(t2, e2, i2) {
    return this.skew(0, t2, e2, i2);
  }
  skewYO(t2, e2, i2) {
    return this.skewO(0, t2, e2, i2);
  }
  aroundO(t2, e2, i2) {
    var n2 = t2 || 0, s2 = e2 || 0;
    return this.translateO(-n2, -s2).lmultiplyO(i2).translateO(n2, s2);
  }
  around(t2, e2, i2) {
    return this.clone().aroundO(t2, e2, i2);
  }
  equals(t2) {
    var e2 = new _nt(t2);
    return it(this.a, e2.a) && it(this.b, e2.b) && it(this.c, e2.c) && it(this.d, e2.d) && it(this.e, e2.e) && it(this.f, e2.f);
  }
  toString() {
    return "matrix(" + this.a + "," + this.b + "," + this.c + "," + this.d + "," + this.e + "," + this.f + ")";
  }
  toArray() {
    return [this.a, this.b, this.c, this.d, this.e, this.f];
  }
  valueOf() {
    return { a: this.a, b: this.b, c: this.c, d: this.d, e: this.e, f: this.f };
  }
  static fromArray(t2) {
    return { a: t2[0], b: t2[1], c: t2[2], d: t2[3], e: t2[4], f: t2[5] };
  }
  static isMatrixLike(t2) {
    return null != t2.a || null != t2.b || null != t2.c || null != t2.d || null != t2.e || null != t2.f;
  }
  static formatTransforms(t2) {
    var e2 = "both" === t2.flip || true === t2.flip, i2 = t2.flip && (e2 || "x" === t2.flip) ? -1 : 1, n2 = t2.flip && (e2 || "y" === t2.flip) ? -1 : 1, s2 = t2.skew && t2.skew.length ? t2.skew[0] : isFinite(t2.skew) ? t2.skew : isFinite(t2.skewX) ? t2.skewX : 0, r2 = t2.skew && t2.skew.length ? t2.skew[1] : isFinite(t2.skew) ? t2.skew : isFinite(t2.skewY) ? t2.skewY : 0, h2 = t2.scale && t2.scale.length ? t2.scale[0] * i2 : isFinite(t2.scale) ? t2.scale * i2 : isFinite(t2.scaleX) ? t2.scaleX * i2 : i2, o2 = t2.scale && t2.scale.length ? t2.scale[1] * n2 : isFinite(t2.scale) ? t2.scale * n2 : isFinite(t2.scaleY) ? t2.scaleY * n2 : n2, a2 = t2.shear || 0, u2 = t2.rotate || t2.theta || 0, l2 = new et(t2.origin || t2.around || t2.ox || t2.originX, t2.oy || t2.originY), c2 = l2.x, d2 = l2.y, f2 = new et(t2.position || t2.px || t2.positionX, t2.py || t2.positionY), p2 = f2.x, m2 = f2.y, y2 = new et(t2.translate || t2.tx || t2.translateX, t2.ty || t2.translateY), g2 = y2.x, v2 = y2.y, _2 = new et(t2.relative || t2.rx || t2.relativeX, t2.ry || t2.relativeY);
    return { scaleX: h2, scaleY: o2, skewX: s2, skewY: r2, shear: a2, theta: u2, rx: _2.x, ry: _2.y, tx: g2, ty: v2, ox: c2, oy: d2, px: p2, py: m2 };
  }
  static matrixMultiply(t2, e2, i2) {
    var n2 = t2.a * e2.a + t2.c * e2.b, s2 = t2.b * e2.a + t2.d * e2.b, r2 = t2.a * e2.c + t2.c * e2.d, h2 = t2.b * e2.c + t2.d * e2.d, o2 = t2.e + t2.a * e2.e + t2.c * e2.f, a2 = t2.f + t2.b * e2.e + t2.d * e2.f;
    return i2.a = n2, i2.b = s2, i2.c = r2, i2.d = h2, i2.e = o2, i2.f = a2, i2;
  }
};
function st() {
  if (!st.nodes) {
    const t2 = _().size(2, 0);
    t2.node.style.cssText = ["opacity: 0", "position: absolute", "left: -100%", "top: -100%", "overflow: hidden"].join(";"), t2.attr("focusable", "false"), t2.attr("aria-hidden", "true");
    const e2 = t2.path().node;
    st.nodes = { svg: t2, path: e2 };
  }
  if (!st.nodes.svg.node.parentNode) {
    const t2 = p.document.body || p.document.documentElement;
    st.nodes.svg.addTo(t2);
  }
  return st.nodes;
}
function rt(t2) {
  return !(t2.width || t2.height || t2.x || t2.y);
}
O(nt, "Matrix");
var ht = class _ht {
  constructor(...t2) {
    this.init(...t2);
  }
  init(t2) {
    return t2 = "string" == typeof t2 ? t2.split(R).map(parseFloat) : Array.isArray(t2) ? t2 : "object" == typeof t2 ? [null != t2.left ? t2.left : t2.x, null != t2.top ? t2.top : t2.y, t2.width, t2.height] : 4 === arguments.length ? [].slice.call(arguments) : [0, 0, 0, 0], this.x = t2[0] || 0, this.y = t2[1] || 0, this.width = this.w = t2[2] || 0, this.height = this.h = t2[3] || 0, this.x2 = this.x + this.w, this.y2 = this.y + this.h, this.cx = this.x + this.w / 2, this.cy = this.y + this.h / 2, this;
  }
  merge(t2) {
    const e2 = Math.min(this.x, t2.x), i2 = Math.min(this.y, t2.y), n2 = Math.max(this.x + this.width, t2.x + t2.width) - e2, s2 = Math.max(this.y + this.height, t2.y + t2.height) - i2;
    return new _ht(e2, i2, n2, s2);
  }
  transform(t2) {
    t2 instanceof nt || (t2 = new nt(t2));
    let e2 = 1 / 0, i2 = -1 / 0, n2 = 1 / 0, s2 = -1 / 0;
    return [new et(this.x, this.y), new et(this.x2, this.y), new et(this.x, this.y2), new et(this.x2, this.y2)].forEach(function(r2) {
      r2 = r2.transform(t2), e2 = Math.min(e2, r2.x), i2 = Math.max(i2, r2.x), n2 = Math.min(n2, r2.y), s2 = Math.max(s2, r2.y);
    }), new _ht(e2, n2, i2 - e2, s2 - n2);
  }
  addOffset() {
    return this.x += p.window.pageXOffset, this.y += p.window.pageYOffset, this;
  }
  toString() {
    return this.x + " " + this.y + " " + this.width + " " + this.height;
  }
  toArray() {
    return [this.x, this.y, this.width, this.height];
  }
  isNulled() {
    return rt(this);
  }
};
function ot(t2, e2) {
  let i2;
  try {
    if (i2 = t2(this.node), rt(i2) && ((n2 = this.node) !== p.document && !(p.document.documentElement.contains || function(t3) {
      for (; t3.parentNode; ) t3 = t3.parentNode;
      return t3 === p.document;
    }).call(p.document.documentElement, n2))) throw new Error("Element not in the dom");
  } catch (t3) {
    i2 = e2(this);
  }
  var n2;
  return i2;
}
i({ viewbox: { viewbox(t2, e2, i2, n2) {
  return null == t2 ? new ht(this.attr("viewBox")) : this.attr("viewBox", new ht(t2, e2, i2, n2));
}, zoom(t2, e2) {
  let i2 = this.node.clientWidth, n2 = this.node.clientHeight;
  const s2 = this.viewbox();
  if (!i2 && !n2) {
    var r2 = window.getComputedStyle(this.node);
    i2 = parseFloat(r2.getPropertyValue("width")), n2 = parseFloat(r2.getPropertyValue("height"));
  }
  const h2 = i2 / s2.width, o2 = n2 / s2.height, a2 = Math.min(h2, o2);
  if (null == t2) return a2;
  let u2 = a2 / t2;
  u2 === 1 / 0 && (u2 = Number.MIN_VALUE), e2 = e2 || new et(i2 / 2 / h2 + s2.x, n2 / 2 / o2 + s2.y);
  const l2 = new ht(s2).transform(new nt({ scale: u2, origin: e2 }));
  return this.viewbox(l2);
} } }), O(ht, "Box");
var at = function() {
  try {
    return Function("name", "baseClass", "_constructor", ["baseClass = baseClass || Array", "return {", "  [name]: class extends baseClass {", "    constructor (...args) {", "      super(...args)", "      _constructor && _constructor.apply(this, args)", "    }", "  }", "}[name]"].join("\n"));
  } catch (t2) {
    return (t3, e2 = Array, i2) => {
      const n2 = function() {
        e2.apply(this, arguments), i2 && i2.apply(this, arguments);
      };
      return (n2.prototype = Object.create(e2.prototype)).constructor = n2, n2.prototype.map = function(t4) {
        const e3 = new n2();
        return e3.push.apply(e3, Array.prototype.map.call(this, t4)), e3;
      }, n2;
    };
  }
}();
var ut = at("List", Array, function(t2 = []) {
  if ("number" == typeof t2) return this;
  this.length = 0, this.push(...t2);
});
k(ut, { each(t2, ...e2) {
  return "function" == typeof t2 ? this.map((e3) => t2.call(e3, e3)) : this.map((i2) => i2[t2](...e2));
}, toArray() {
  return Array.prototype.concat.apply([], this);
} });
var lt = ["toArray", "constructor", "each"];
function ct(t2, e2) {
  return new ut(r((e2 || p.document).querySelectorAll(t2), function(t3) {
    return b(t3);
  }));
}
ut.extend = function(t2) {
  t2 = t2.reduce((t3, e2) => (lt.includes(e2) || "_" === e2[0] || (t3[e2] = function(...t4) {
    return this.each(e2, ...t4);
  }), t3), {}), k(ut, t2);
};
var dt = class extends m {
  constructor({ events: t2 = {} } = {}) {
    super(), this.events = t2;
  }
  addEventListener() {
  }
  dispatch(t2, e2) {
    return function(t3, e3, i2) {
      var n2 = G(t3);
      return e3 instanceof p.window.Event || (e3 = new p.window.CustomEvent(e3, { detail: i2, cancelable: true })), n2.dispatchEvent(e3), e3;
    }(this, t2, e2);
  }
  dispatchEvent(t2) {
    const e2 = this.getEventHolder().events;
    if (!e2) return true;
    const i2 = e2[t2.type];
    for (const e3 in i2) for (const n2 in i2[e3]) i2[e3][n2](t2);
    return !t2.defaultPrevented;
  }
  fire(t2, e2) {
    return this.dispatch(t2, e2), this;
  }
  getEventHolder() {
    return this;
  }
  getEventTarget() {
    return this;
  }
  off(t2, e2) {
    return $(this, t2, e2), this;
  }
  on(t2, e2, i2, n2) {
    return V(this, t2, e2, i2, n2), this;
  }
  removeEventListener() {
  }
};
function ft() {
}
O(dt, "EventTarget");
var pt = 400;
var mt = ">";
var yt = 0;
var gt = { "fill-opacity": 1, "stroke-opacity": 1, "stroke-width": 0, "stroke-linejoin": "miter", "stroke-linecap": "butt", fill: "#000000", stroke: "#000000", opacity: 1, x: 0, y: 0, cx: 0, cy: 0, width: 0, height: 0, r: 0, rx: 0, ry: 0, offset: 0, "stop-opacity": 1, "stop-color": "#000000", "text-anchor": "start" };
var vt = at("SVGArray", Array, function(t2) {
  this.init(t2);
});
k(vt, { init(t2) {
  return "number" == typeof t2 || (this.length = 0, this.push(...this.parse(t2))), this;
}, toArray() {
  return Array.prototype.concat.apply([], this);
}, toString() {
  return this.join(" ");
}, valueOf() {
  const t2 = [];
  return t2.push(...this), t2;
}, parse: (t2 = []) => t2 instanceof Array ? t2 : t2.trim().split(R).map(parseFloat), clone() {
  return new this.constructor(this);
}, toSet() {
  return new Set(this);
} });
var _t = class __t {
  constructor(...t2) {
    this.init(...t2);
  }
  init(t2, e2) {
    return e2 = Array.isArray(t2) ? t2[1] : e2, t2 = Array.isArray(t2) ? t2[0] : t2, this.value = 0, this.unit = e2 || "", "number" == typeof t2 ? this.value = isNaN(t2) ? 0 : isFinite(t2) ? t2 : t2 < 0 ? -34e37 : 34e37 : "string" == typeof t2 ? (e2 = t2.match(M)) && (this.value = parseFloat(e2[1]), "%" === e2[5] ? this.value /= 100 : "s" === e2[5] && (this.value *= 1e3), this.unit = e2[5]) : t2 instanceof __t && (this.value = t2.valueOf(), this.unit = t2.unit), this;
  }
  toString() {
    return ("%" === this.unit ? ~~(1e8 * this.value) / 1e6 : "s" === this.unit ? this.value / 1e3 : this.value) + this.unit;
  }
  toJSON() {
    return this.toString();
  }
  toArray() {
    return [this.value, this.unit];
  }
  valueOf() {
    return this.value;
  }
  plus(t2) {
    return t2 = new __t(t2), new __t(this + t2, this.unit || t2.unit);
  }
  minus(t2) {
    return t2 = new __t(t2), new __t(this - t2, this.unit || t2.unit);
  }
  times(t2) {
    return t2 = new __t(t2), new __t(this * t2, this.unit || t2.unit);
  }
  divide(t2) {
    return t2 = new __t(t2), new __t(this / t2, this.unit || t2.unit);
  }
  convert(t2) {
    return new __t(this.value, t2);
  }
};
var wt = [];
var bt = class _bt extends dt {
  constructor(t2, e2) {
    super(t2), this.node = t2, this.type = t2.nodeName, e2 && t2 !== e2 && this.attr(e2);
  }
  add(t2, e2) {
    return t2 = _(t2), null == e2 ? this.node.appendChild(t2.node) : t2.node !== this.node.childNodes[e2] && this.node.insertBefore(t2.node, this.node.childNodes[e2]), this;
  }
  addTo(t2) {
    return _(t2).put(this);
  }
  children() {
    return new ut(r(this.node.children, function(t2) {
      return b(t2);
    }));
  }
  clear() {
    for (; this.node.hasChildNodes(); ) this.node.removeChild(this.node.lastChild);
    return this;
  }
  clone() {
    return this.writeDataToDom(), function t2(e2) {
      for (var i2 = e2.children.length - 1; i2 >= 0; i2--) t2(e2.children[i2]);
      return e2.id ? b(e2).id(S(e2.nodeName)) : b(e2);
    }(this.node.cloneNode(true));
  }
  each(t2, e2) {
    var i2, n2, s2 = this.children();
    for (i2 = 0, n2 = s2.length; i2 < n2; i2++) t2.apply(s2[i2], [i2, s2]), e2 && s2[i2].each(t2, e2);
    return this;
  }
  element(t2) {
    return this.put(new _bt(v(t2)));
  }
  first() {
    return b(this.node.firstChild);
  }
  get(t2) {
    return b(this.node.childNodes[t2]);
  }
  getEventHolder() {
    return this.node;
  }
  getEventTarget() {
    return this.node;
  }
  has(t2) {
    return this.index(t2) >= 0;
  }
  id(t2) {
    return void 0 !== t2 || this.node.id || (this.node.id = S(this.type)), this.attr("id", t2);
  }
  index(t2) {
    return [].slice.call(this.node.childNodes).indexOf(t2.node);
  }
  last() {
    return b(this.node.lastChild);
  }
  matches(t2) {
    const e2 = this.node;
    return (e2.matches || e2.matchesSelector || e2.msMatchesSelector || e2.mozMatchesSelector || e2.webkitMatchesSelector || e2.oMatchesSelector).call(e2, t2);
  }
  parent(t2) {
    var e2 = this;
    if (!e2.node.parentNode) return null;
    if (e2 = b(e2.node.parentNode), !t2) return e2;
    for (; e2; ) {
      if ("string" == typeof t2 ? e2.matches(t2) : e2 instanceof t2) return e2;
      if (!e2.node.parentNode || "#document" === e2.node.parentNode.nodeName || "#document-fragment" === e2.node.parentNode.nodeName) return null;
      e2 = b(e2.node.parentNode);
    }
  }
  put(t2, e2) {
    return this.add(t2, e2), t2;
  }
  putIn(t2) {
    return _(t2).add(this);
  }
  remove() {
    return this.parent() && this.parent().removeElement(this), this;
  }
  removeElement(t2) {
    return this.node.removeChild(t2.node), this;
  }
  replace(t2) {
    return t2 = _(t2), this.node.parentNode.replaceChild(t2.node, this.node), t2;
  }
  round(t2 = 2, e2) {
    const i2 = 10 ** t2, n2 = this.attr();
    e2 || (e2 = Object.keys(n2));
    const s2 = {};
    return e2.forEach((t3) => {
      s2[t3] = Math.round(n2[t3] * i2) / i2;
    }), this.attr(s2), this;
  }
  toString() {
    return this.id();
  }
  svg(t2, e2) {
    var i2, n2, s2;
    if (false === t2 && (e2 = false, t2 = null), null == t2 || "function" == typeof t2) {
      e2 = null == e2 || e2, this.writeDataToDom();
      let i3 = this;
      if (null != t2) {
        if (i3 = b(i3.node.cloneNode(true)), e2) {
          const e3 = t2(i3);
          if (i3 = e3 || i3, false === e3) return "";
        }
        i3.each(function() {
          const e3 = t2(this), i4 = e3 || this;
          false === e3 ? this.remove() : e3 && this !== i4 && this.replace(i4);
        }, true);
      }
      return e2 ? i3.node.outerHTML : i3.node.innerHTML;
    }
    for (e2 = null != e2 && e2, i2 = p.document.createElementNS(c, "svg"), s2 = p.document.createDocumentFragment(), i2.innerHTML = t2, n2 = i2.children.length; n2--; ) s2.appendChild(i2.firstElementChild);
    const r2 = this.parent();
    return e2 ? this.replace(s2) && r2 : this.add(s2);
  }
  words(t2) {
    return this.node.textContent = t2, this;
  }
  writeDataToDom() {
    return this.each(function() {
      this.writeDataToDom();
    }), this;
  }
};
k(bt, { attr: function(t2, e2, i2) {
  if (null == t2) {
    t2 = {}, e2 = this.node.attributes;
    for (const i3 of e2) t2[i3.nodeName] = z.test(i3.nodeValue) ? parseFloat(i3.nodeValue) : i3.nodeValue;
    return t2;
  }
  if (t2 instanceof Array) return t2.reduce((t3, e3) => (t3[e3] = this.attr(e3), t3), {});
  if ("object" == typeof t2 && t2.constructor === Object) for (e2 in t2) this.attr(e2, t2[e2]);
  else if (null === e2) this.node.removeAttribute(t2);
  else {
    if (null == e2) return null == (e2 = this.node.getAttribute(t2)) ? gt[t2] : z.test(e2) ? parseFloat(e2) : e2;
    "number" == typeof (e2 = wt.reduce((e3, i3) => i3(t2, e3, this), e2)) ? e2 = new _t(e2) : tt.isColor(e2) ? e2 = new tt(e2) : e2.constructor === Array && (e2 = new vt(e2)), "leading" === t2 ? this.leading && this.leading(e2) : "string" == typeof i2 ? this.node.setAttributeNS(i2, t2, e2.toString()) : this.node.setAttribute(t2, e2.toString()), !this.rebuild || "font-size" !== t2 && "x" !== t2 || this.rebuild();
  }
  return this;
}, find: function(t2) {
  return ct(t2, this.node);
}, findOne: function(t2) {
  return b(this.node.querySelector(t2));
} }), O(bt, "Dom");
var xt = class extends bt {
  constructor(t2, e2) {
    super(t2, e2), this.dom = {}, this.node.instance = this, t2.hasAttribute("svgjs:data") && this.setData(JSON.parse(t2.getAttribute("svgjs:data")) || {});
  }
  center(t2, e2) {
    return this.cx(t2).cy(e2);
  }
  cx(t2) {
    return null == t2 ? this.x() + this.width() / 2 : this.x(t2 - this.width() / 2);
  }
  cy(t2) {
    return null == t2 ? this.y() + this.height() / 2 : this.y(t2 - this.height() / 2);
  }
  defs() {
    return this.root().defs();
  }
  dmove(t2, e2) {
    return this.dx(t2).dy(e2);
  }
  dx(t2 = 0) {
    return this.x(new _t(t2).plus(this.x()));
  }
  dy(t2 = 0) {
    return this.y(new _t(t2).plus(this.y()));
  }
  root() {
    const t2 = this.parent(y[g]);
    return t2 && t2.root();
  }
  getEventHolder() {
    return this;
  }
  height(t2) {
    return this.attr("height", t2);
  }
  inside(t2, e2) {
    const i2 = this.bbox();
    return t2 > i2.x && e2 > i2.y && t2 < i2.x + i2.width && e2 < i2.y + i2.height;
  }
  move(t2, e2) {
    return this.x(t2).y(e2);
  }
  parents(t2 = p.document) {
    t2 = _(t2);
    const e2 = new ut();
    let i2 = this;
    for (; (i2 = i2.parent()) && i2.node !== t2.node && i2.node !== p.document; ) e2.push(i2);
    return e2;
  }
  reference(t2) {
    if (!(t2 = this.attr(t2))) return null;
    const e2 = t2.match(E);
    return e2 ? _(e2[1]) : null;
  }
  setData(t2) {
    return this.dom = t2, this;
  }
  size(t2, e2) {
    const i2 = u(this, t2, e2);
    return this.width(new _t(i2.width)).height(new _t(i2.height));
  }
  width(t2) {
    return this.attr("width", t2);
  }
  writeDataToDom() {
    return this.node.removeAttribute("svgjs:data"), Object.keys(this.dom).length && this.node.setAttribute("svgjs:data", JSON.stringify(this.dom)), super.writeDataToDom();
  }
  x(t2) {
    return this.attr("x", t2);
  }
  y(t2) {
    return this.attr("y", t2);
  }
};
k(xt, { bbox: function() {
  return new ht(ot.call(this, (t2) => t2.getBBox(), (t2) => {
    try {
      const e2 = t2.clone().addTo(st().svg).show(), i2 = e2.node.getBBox();
      return e2.remove(), i2;
    } catch (e2) {
      throw new Error('Getting bbox of element "' + t2.node.nodeName + '" is not possible. ' + e2.toString());
    }
  }));
}, rbox: function(t2) {
  const e2 = new ht(ot.call(this, (t3) => t3.getBoundingClientRect(), (t3) => {
    throw new Error('Getting rbox of element "' + t3.node.nodeName + '" is not possible');
  }));
  return t2 ? e2.transform(t2.screenCTM().inverse()) : e2.addOffset();
}, point: function(t2, e2) {
  return new et(t2, e2).transform(this.screenCTM().inverse());
}, ctm: function() {
  return new nt(this.node.getCTM());
}, screenCTM: function() {
  if ("function" == typeof this.isRoot && !this.isRoot()) {
    var t2 = this.rect(1, 1), e2 = t2.node.getScreenCTM();
    return t2.remove(), new nt(e2);
  }
  return new nt(this.node.getScreenCTM());
} }), O(xt, "Element");
var Ot = { stroke: ["color", "width", "opacity", "linecap", "linejoin", "miterlimit", "dasharray", "dashoffset"], fill: ["color", "opacity", "rule"], prefix: function(t2, e2) {
  return "color" === e2 ? t2 : t2 + "-" + e2;
} };
function Nt(t2) {
  return this.attr("rx", t2);
}
function St(t2) {
  return this.attr("ry", t2);
}
function kt(t2) {
  return null == t2 ? this.cx() - this.rx() : this.cx(t2 + this.rx());
}
function Tt(t2) {
  return null == t2 ? this.cy() - this.ry() : this.cy(t2 + this.ry());
}
function Mt(t2) {
  return null == t2 ? this.attr("cx") : this.attr("cx", t2);
}
function At(t2) {
  return null == t2 ? this.attr("cy") : this.attr("cy", t2);
}
function Ct(t2) {
  return null == t2 ? 2 * this.rx() : this.rx(new _t(t2).divide(2));
}
function Et(t2) {
  return null == t2 ? 2 * this.ry() : this.ry(new _t(t2).divide(2));
}
["fill", "stroke"].forEach(function(t2) {
  var e2, n2 = {};
  n2[t2] = function(i2) {
    if (void 0 === i2) return this.attr(t2);
    if ("string" == typeof i2 || i2 instanceof tt || tt.isRgb(i2) || i2 instanceof xt) this.attr(t2, i2);
    else for (e2 = Ot[t2].length - 1; e2 >= 0; e2--) null != i2[Ot[t2][e2]] && this.attr(Ot.prefix(t2, Ot[t2][e2]), i2[Ot[t2][e2]]);
    return this;
  }, i(["Element", "Runner"], n2);
}), i(["Element", "Runner"], { matrix: function(t2, e2, i2, n2, s2, r2) {
  return null == t2 ? new nt(this) : this.attr("transform", new nt(t2, e2, i2, n2, s2, r2));
}, rotate: function(t2, e2, i2) {
  return this.transform({ rotate: t2, ox: e2, oy: i2 }, true);
}, skew: function(t2, e2, i2, n2) {
  return 1 === arguments.length || 3 === arguments.length ? this.transform({ skew: t2, ox: e2, oy: i2 }, true) : this.transform({ skew: [t2, e2], ox: i2, oy: n2 }, true);
}, shear: function(t2, e2, i2) {
  return this.transform({ shear: t2, ox: e2, oy: i2 }, true);
}, scale: function(t2, e2, i2, n2) {
  return 1 === arguments.length || 3 === arguments.length ? this.transform({ scale: t2, ox: e2, oy: i2 }, true) : this.transform({ scale: [t2, e2], ox: i2, oy: n2 }, true);
}, translate: function(t2, e2) {
  return this.transform({ translate: [t2, e2] }, true);
}, relative: function(t2, e2) {
  return this.transform({ relative: [t2, e2] }, true);
}, flip: function(t2, e2) {
  var i2 = "string" == typeof t2 ? t2 : (isFinite(t2), "both"), n2 = "both" === t2 && isFinite(e2) ? [e2, e2] : "x" === t2 ? [e2, 0] : "y" === t2 ? [0, e2] : isFinite(t2) ? [t2, t2] : [0, 0];
  return this.transform({ flip: i2, origin: n2 }, true);
}, opacity: function(t2) {
  return this.attr("opacity", t2);
} }), i("radius", { radius: function(t2, e2) {
  var i2 = (this._element || this).type;
  return "radialGradient" === i2 || "radialGradient" === i2 ? this.attr("r", new _t(t2)) : this.rx(t2).ry(null == e2 ? t2 : e2);
} }), i("Path", { length: function() {
  return this.node.getTotalLength();
}, pointAt: function(t2) {
  return new et(this.node.getPointAtLength(t2));
} }), i(["Element", "Runner"], { font: function(t2, e2) {
  if ("object" == typeof t2) {
    for (e2 in t2) this.font(e2, t2[e2]);
    return this;
  }
  return "leading" === t2 ? this.leading(e2) : "anchor" === t2 ? this.attr("text-anchor", e2) : "size" === t2 || "family" === t2 || "weight" === t2 || "stretch" === t2 || "variant" === t2 || "style" === t2 ? this.attr("font-" + t2, e2) : this.attr(t2, e2);
} }), i("Text", { ax(t2) {
  return this.attr("x", t2);
}, ay(t2) {
  return this.attr("y", t2);
}, amove(t2, e2) {
  return this.ax(t2).ay(e2);
} }), i("Element", ["click", "dblclick", "mousedown", "mouseup", "mouseover", "mouseout", "mousemove", "mouseenter", "mouseleave", "touchstart", "touchmove", "touchleave", "touchend", "touchcancel"].reduce(function(t2, e2) {
  return t2[e2] = function(t3) {
    return null === t3 ? $(this, e2) : V(this, e2, t3), this;
  }, t2;
}, {})), i("Element", { untransform: function() {
  return this.attr("transform", null);
}, matrixify: function() {
  return (this.attr("transform") || "").split(I).slice(0, -1).map(function(t2) {
    var e2 = t2.trim().split("(");
    return [e2[0], e2[1].split(R).map(function(t3) {
      return parseFloat(t3);
    })];
  }).reverse().reduce(function(t2, e2) {
    return "matrix" === e2[0] ? t2.lmultiply(nt.fromArray(e2[1])) : t2[e2[0]].apply(t2, e2[1]);
  }, new nt());
}, toParent: function(t2) {
  if (this === t2) return this;
  var e2 = this.screenCTM(), i2 = t2.screenCTM().inverse();
  return this.addTo(t2).untransform().transform(i2.multiply(e2)), this;
}, toRoot: function() {
  return this.toParent(this.root());
}, transform: function(t2, e2) {
  if (null == t2 || "string" == typeof t2) {
    var i2 = new nt(this).decompose();
    return null == t2 ? i2 : i2[t2];
  }
  nt.isMatrixLike(t2) || (t2 = { ...t2, origin: l(t2, this) });
  var n2 = new nt(true === e2 ? this : e2 || false).transform(t2);
  return this.attr("transform", n2);
} });
var It;
var jt = Object.freeze({ __proto__: null, rx: Nt, ry: St, x: kt, y: Tt, cx: Mt, cy: At, width: Ct, height: Et });
var Lt = class extends xt {
};
O(Lt, "Shape");
var Ht = class extends Lt {
  constructor(t2) {
    super(w("circle", t2), t2);
  }
  radius(t2) {
    return this.attr("r", t2);
  }
  rx(t2) {
    return this.attr("r", t2);
  }
  ry(t2) {
    return this.rx(t2);
  }
  size(t2) {
    return this.radius(new _t(t2).divide(2));
  }
};
k(Ht, { x: kt, y: Tt, cx: Mt, cy: At, width: Ct, height: Et }), i({ Container: { circle: T(function(t2) {
  return this.put(new Ht()).size(t2).move(0, 0);
}) } }), O(Ht, "Circle");
var Dt = class _Dt extends xt {
  flatten(t2) {
    return this.each(function() {
      return this instanceof _Dt ? this.flatten(t2).ungroup(t2) : this.toParent(t2);
    }), this.node.firstElementChild || this.remove(), this;
  }
  ungroup(t2) {
    return t2 = t2 || this.parent(), this.each(function() {
      return this.toParent(t2);
    }), this.remove(), this;
  }
};
O(Dt, "Container");
var zt = class extends Dt {
  constructor(t2) {
    super(w("defs", t2), t2);
  }
  flatten() {
    return this;
  }
  ungroup() {
    return this;
  }
};
O(zt, "Defs");
var Pt = class extends Lt {
  constructor(t2) {
    super(w("ellipse", t2), t2);
  }
  size(t2, e2) {
    var i2 = u(this, t2, e2);
    return this.rx(new _t(i2.width).divide(2)).ry(new _t(i2.height).divide(2));
  }
};
k(Pt, jt), i("Container", { ellipse: T(function(t2 = 0, e2 = t2) {
  return this.put(new Pt()).size(t2, e2).move(0, 0);
}) }), O(Pt, "Ellipse");
var Rt = class extends xt {
  constructor(t2) {
    super(w("stop", t2), t2);
  }
  update(t2) {
    return ("number" == typeof t2 || t2 instanceof _t) && (t2 = { offset: arguments[0], color: arguments[1], opacity: arguments[2] }), null != t2.opacity && this.attr("stop-opacity", t2.opacity), null != t2.color && this.attr("stop-color", t2.color), null != t2.offset && this.attr("offset", new _t(t2.offset)), this;
  }
};
function Kt(t2, e2) {
  return "radialGradient" === (this._element || this).type ? this.attr({ fx: new _t(t2), fy: new _t(e2) }) : this.attr({ x1: new _t(t2), y1: new _t(e2) });
}
function Ft(t2, e2) {
  return "radialGradient" === (this._element || this).type ? this.attr({ cx: new _t(t2), cy: new _t(e2) }) : this.attr({ x2: new _t(t2), y2: new _t(e2) });
}
O(Rt, "Stop");
var qt = class extends Dt {
  constructor(t2, e2) {
    super(w(t2 + "Gradient", "string" == typeof t2 ? null : t2), e2);
  }
  stop(t2, e2, i2) {
    return this.put(new Rt()).update(t2, e2, i2);
  }
  update(t2) {
    return this.clear(), "function" == typeof t2 && t2.call(this, this), this;
  }
  url() {
    return "url(#" + this.id() + ")";
  }
  toString() {
    return this.url();
  }
  attr(t2, e2, i2) {
    return "transform" === t2 && (t2 = "gradientTransform"), super.attr(t2, e2, i2);
  }
  targets() {
    return ct('svg [fill*="' + this.id() + '"]');
  }
  bbox() {
    return new ht();
  }
};
k(qt, Object.freeze({ __proto__: null, from: Kt, to: Ft })), i({ Container: { gradient: T(function(t2, e2) {
  return this.defs().gradient(t2, e2);
}) }, Defs: { gradient: T(function(t2, e2) {
  return this.put(new qt(t2)).update(e2);
}) } }), O(qt, "Gradient");
var Wt = class extends Dt {
  constructor(t2) {
    super(w("pattern", t2), t2);
  }
  url() {
    return "url(#" + this.id() + ")";
  }
  update(t2) {
    return this.clear(), "function" == typeof t2 && t2.call(this, this), this;
  }
  toString() {
    return this.url();
  }
  attr(t2, e2, i2) {
    return "transform" === t2 && (t2 = "patternTransform"), super.attr(t2, e2, i2);
  }
  targets() {
    return ct('svg [fill*="' + this.id() + '"]');
  }
  bbox() {
    return new ht();
  }
};
i({ Container: { pattern(...t2) {
  return this.defs().pattern(...t2);
} }, Defs: { pattern: T(function(t2, e2, i2) {
  return this.put(new Wt()).update(i2).attr({ x: 0, y: 0, width: t2, height: e2, patternUnits: "userSpaceOnUse" });
}) } }), O(Wt, "Pattern");
var Yt = class extends Lt {
  constructor(t2) {
    super(w("image", t2), t2);
  }
  load(t2, e2) {
    if (!t2) return this;
    var i2 = new p.window.Image();
    return V(i2, "load", function(t3) {
      var n2 = this.parent(Wt);
      0 === this.width() && 0 === this.height() && this.size(i2.width, i2.height), n2 instanceof Wt && 0 === n2.width() && 0 === n2.height() && n2.size(this.width(), this.height()), "function" == typeof e2 && e2.call(this, t3);
    }, this), V(i2, "load error", function() {
      $(i2);
    }), this.attr("href", i2.src = t2, f);
  }
};
It = function(t2, e2, i2) {
  return "fill" !== t2 && "stroke" !== t2 || P.test(e2) && (e2 = i2.root().defs().image(e2)), e2 instanceof Yt && (e2 = i2.root().defs().pattern(0, 0, (t3) => {
    t3.add(e2);
  })), e2;
}, wt.push(It), i({ Container: { image: T(function(t2, e2) {
  return this.put(new Yt()).size(0, 0).load(t2, e2);
}) } }), O(Yt, "Image");
var Bt = at("PointArray", vt);
k(Bt, { toString() {
  for (var t2 = 0, e2 = this.length, i2 = []; t2 < e2; t2++) i2.push(this[t2].join(","));
  return i2.join(" ");
}, toLine() {
  return { x1: this[0][0], y1: this[0][1], x2: this[1][0], y2: this[1][1] };
}, at(t2) {
  if (!this.destination) return this;
  for (var e2 = 0, i2 = this.length, n2 = []; e2 < i2; e2++) n2.push([this[e2][0] + (this.destination[e2][0] - this[e2][0]) * t2, this[e2][1] + (this.destination[e2][1] - this[e2][1]) * t2]);
  return new Bt(n2);
}, parse(t2 = [[0, 0]]) {
  var e2 = [];
  if (t2 instanceof Array) {
    if (t2[0] instanceof Array) return t2;
  } else t2 = t2.trim().split(R).map(parseFloat);
  t2.length % 2 != 0 && t2.pop();
  for (var i2 = 0, n2 = t2.length; i2 < n2; i2 += 2) e2.push([t2[i2], t2[i2 + 1]]);
  return e2;
}, transform(t2) {
  const e2 = [];
  for (let i2 = 0; i2 < this.length; i2++) {
    const n2 = this[i2];
    e2.push([t2.a * n2[0] + t2.c * n2[1] + t2.e, t2.b * n2[0] + t2.d * n2[1] + t2.f]);
  }
  return new Bt(e2);
}, move(t2, e2) {
  var i2 = this.bbox();
  if (t2 -= i2.x, e2 -= i2.y, !isNaN(t2) && !isNaN(e2)) for (var n2 = this.length - 1; n2 >= 0; n2--) this[n2] = [this[n2][0] + t2, this[n2][1] + e2];
  return this;
}, size(t2, e2) {
  var i2, n2 = this.bbox();
  for (i2 = this.length - 1; i2 >= 0; i2--) n2.width && (this[i2][0] = (this[i2][0] - n2.x) * t2 / n2.width + n2.x), n2.height && (this[i2][1] = (this[i2][1] - n2.y) * e2 / n2.height + n2.y);
  return this;
}, bbox() {
  var t2 = -1 / 0, e2 = -1 / 0, i2 = 1 / 0, n2 = 1 / 0;
  return this.forEach(function(s2) {
    t2 = Math.max(s2[0], t2), e2 = Math.max(s2[1], e2), i2 = Math.min(s2[0], i2), n2 = Math.min(s2[1], n2);
  }), { x: i2, y: n2, width: t2 - i2, height: e2 - n2 };
} });
var Ut = Bt;
var Xt = Object.freeze({ __proto__: null, MorphArray: Ut, x: function(t2) {
  return null == t2 ? this.bbox().x : this.move(t2, this.bbox().y);
}, y: function(t2) {
  return null == t2 ? this.bbox().y : this.move(this.bbox().x, t2);
}, width: function(t2) {
  const e2 = this.bbox();
  return null == t2 ? e2.width : this.size(t2, e2.height);
}, height: function(t2) {
  const e2 = this.bbox();
  return null == t2 ? e2.height : this.size(e2.width, t2);
} });
var Gt = class extends Lt {
  constructor(t2) {
    super(w("line", t2), t2);
  }
  array() {
    return new Bt([[this.attr("x1"), this.attr("y1")], [this.attr("x2"), this.attr("y2")]]);
  }
  plot(t2, e2, i2, n2) {
    return null == t2 ? this.array() : (t2 = void 0 !== e2 ? { x1: t2, y1: e2, x2: i2, y2: n2 } : new Bt(t2).toLine(), this.attr(t2));
  }
  move(t2, e2) {
    return this.attr(this.array().move(t2, e2).toLine());
  }
  size(t2, e2) {
    var i2 = u(this, t2, e2);
    return this.attr(this.array().size(i2.width, i2.height).toLine());
  }
};
k(Gt, Xt), i({ Container: { line: T(function(...t2) {
  return Gt.prototype.plot.apply(this.put(new Gt()), null != t2[0] ? t2 : [0, 0, 0, 0]);
}) } }), O(Gt, "Line");
var Vt = class extends Dt {
  constructor(t2) {
    super(w("marker", t2), t2);
  }
  width(t2) {
    return this.attr("markerWidth", t2);
  }
  height(t2) {
    return this.attr("markerHeight", t2);
  }
  ref(t2, e2) {
    return this.attr("refX", t2).attr("refY", e2);
  }
  update(t2) {
    return this.clear(), "function" == typeof t2 && t2.call(this, this), this;
  }
  toString() {
    return "url(#" + this.id() + ")";
  }
};
function $t(t2, e2) {
  return function(i2) {
    return null == i2 ? this[i2] : (this[t2] = i2, e2 && e2.call(this), this);
  };
}
i({ Container: { marker(...t2) {
  return this.defs().marker(...t2);
} }, Defs: { marker: T(function(t2, e2, i2) {
  return this.put(new Vt()).size(t2, e2).ref(t2 / 2, e2 / 2).viewbox(0, 0, t2, e2).attr("orient", "auto").update(i2);
}) }, marker: { marker(t2, e2, i2, n2) {
  var s2 = ["marker"];
  return "all" !== t2 && s2.push(t2), s2 = s2.join("-"), t2 = arguments[1] instanceof Vt ? arguments[1] : this.defs().marker(e2, i2, n2), this.attr(s2, t2);
} } }), O(Vt, "Marker");
var Qt = { "-": function(t2) {
  return t2;
}, "<>": function(t2) {
  return -Math.cos(t2 * Math.PI) / 2 + 0.5;
}, ">": function(t2) {
  return Math.sin(t2 * Math.PI / 2);
}, "<": function(t2) {
  return 1 - Math.cos(t2 * Math.PI / 2);
}, bezier: function(t2, e2, i2, n2) {
  return function(s2) {
    return s2 < 0 ? t2 > 0 ? e2 / t2 * s2 : i2 > 0 ? n2 / i2 * s2 : 0 : s2 > 1 ? i2 < 1 ? (1 - n2) / (1 - i2) * s2 + (n2 - i2) / (1 - i2) : t2 < 1 ? (1 - e2) / (1 - t2) * s2 + (e2 - t2) / (1 - t2) : 1 : 3 * s2 * (1 - s2) ** 2 * e2 + 3 * s2 ** 2 * (1 - s2) * n2 + s2 ** 3;
  };
}, steps: function(t2, e2 = "end") {
  e2 = e2.split("-").reverse()[0];
  let i2 = t2;
  return "none" === e2 ? --i2 : "both" === e2 && ++i2, (n2, s2 = false) => {
    let r2 = Math.floor(n2 * t2);
    const h2 = n2 * r2 % 1 == 0;
    return "start" !== e2 && "both" !== e2 || ++r2, s2 && h2 && --r2, n2 >= 0 && r2 < 0 && (r2 = 0), n2 <= 1 && r2 > i2 && (r2 = i2), r2 / i2;
  };
} };
var Zt = class {
  done() {
    return false;
  }
};
var Jt = class extends Zt {
  constructor(t2) {
    super(), this.ease = Qt[t2 || mt] || t2;
  }
  step(t2, e2, i2) {
    return "number" != typeof t2 ? i2 < 1 ? t2 : e2 : t2 + (e2 - t2) * this.ease(i2);
  }
};
var te = class extends Zt {
  constructor(t2) {
    super(), this.stepper = t2;
  }
  step(t2, e2, i2, n2) {
    return this.stepper(t2, e2, i2, n2);
  }
  done(t2) {
    return t2.done;
  }
};
function ee() {
  var t2 = (this._duration || 500) / 1e3, e2 = this._overshoot || 0, i2 = Math.PI, n2 = Math.log(e2 / 100 + 1e-10), s2 = -n2 / Math.sqrt(i2 * i2 + n2 * n2), r2 = 3.9 / (s2 * t2);
  this.d = 2 * s2 * r2, this.k = r2 * r2;
}
k(class extends te {
  constructor(t2, e2) {
    super(), this.duration(t2 || 500).overshoot(e2 || 0);
  }
  step(t2, e2, i2, n2) {
    if ("string" == typeof t2) return t2;
    if (n2.done = i2 === 1 / 0, i2 === 1 / 0) return e2;
    if (0 === i2) return t2;
    i2 > 100 && (i2 = 16), i2 /= 1e3;
    var s2 = n2.velocity || 0, r2 = -this.d * s2 - this.k * (t2 - e2), h2 = t2 + s2 * i2 + r2 * i2 * i2 / 2;
    return n2.velocity = s2 + r2 * i2, n2.done = Math.abs(e2 - h2) + Math.abs(s2) < 2e-3, n2.done ? e2 : h2;
  }
}, { duration: $t("_duration", ee), overshoot: $t("_overshoot", ee) });
k(class extends te {
  constructor(t2, e2, i2, n2) {
    super(), t2 = null == t2 ? 0.1 : t2, e2 = null == e2 ? 0.01 : e2, i2 = null == i2 ? 0 : i2, n2 = null == n2 ? 1e3 : n2, this.p(t2).i(e2).d(i2).windup(n2);
  }
  step(t2, e2, i2, n2) {
    if ("string" == typeof t2) return t2;
    if (n2.done = i2 === 1 / 0, i2 === 1 / 0) return e2;
    if (0 === i2) return t2;
    var s2 = e2 - t2, r2 = (n2.integral || 0) + s2 * i2, h2 = (s2 - (n2.error || 0)) / i2, o2 = this.windup;
    return false !== o2 && (r2 = Math.max(-o2, Math.min(r2, o2))), n2.error = s2, n2.integral = r2, n2.done = Math.abs(s2) < 1e-3, n2.done ? e2 : t2 + (this.P * s2 + this.I * r2 + this.D * h2);
  }
}, { windup: $t("windup"), p: $t("P"), i: $t("I"), d: $t("D") });
var ie = at("PathArray", vt);
function ne(t2, e2, i2, n2) {
  return i2 + n2.replace(Y, " .");
}
var se = { M: function(t2, e2, i2) {
  return e2.x = i2.x = t2[0], e2.y = i2.y = t2[1], ["M", e2.x, e2.y];
}, L: function(t2, e2) {
  return e2.x = t2[0], e2.y = t2[1], ["L", t2[0], t2[1]];
}, H: function(t2, e2) {
  return e2.x = t2[0], ["H", t2[0]];
}, V: function(t2, e2) {
  return e2.y = t2[0], ["V", t2[0]];
}, C: function(t2, e2) {
  return e2.x = t2[4], e2.y = t2[5], ["C", t2[0], t2[1], t2[2], t2[3], t2[4], t2[5]];
}, S: function(t2, e2) {
  return e2.x = t2[2], e2.y = t2[3], ["S", t2[0], t2[1], t2[2], t2[3]];
}, Q: function(t2, e2) {
  return e2.x = t2[2], e2.y = t2[3], ["Q", t2[0], t2[1], t2[2], t2[3]];
}, T: function(t2, e2) {
  return e2.x = t2[0], e2.y = t2[1], ["T", t2[0], t2[1]];
}, Z: function(t2, e2, i2) {
  return e2.x = i2.x, e2.y = i2.y, ["Z"];
}, A: function(t2, e2) {
  return e2.x = t2[5], e2.y = t2[6], ["A", t2[0], t2[1], t2[2], t2[3], t2[4], t2[5], t2[6]];
} };
var re = "mlhvqtcsaz".split("");
for (he = 0, oe = re.length; he < oe; ++he) se[re[he]] = /* @__PURE__ */ function(t2) {
  return function(e2, i2, n2) {
    if ("H" === t2) e2[0] = e2[0] + i2.x;
    else if ("V" === t2) e2[0] = e2[0] + i2.y;
    else if ("A" === t2) e2[5] = e2[5] + i2.x, e2[6] = e2[6] + i2.y;
    else for (var s2 = 0, r2 = e2.length; s2 < r2; ++s2) e2[s2] = e2[s2] + (s2 % 2 ? i2.y : i2.x);
    return se[t2](e2, i2, n2);
  };
}(re[he].toUpperCase());
var he;
var oe;
k(ie, { toString() {
  return function(t2) {
    for (var e2 = 0, i2 = t2.length, n2 = ""; e2 < i2; e2++) n2 += t2[e2][0], null != t2[e2][1] && (n2 += t2[e2][1], null != t2[e2][2] && (n2 += " ", n2 += t2[e2][2], null != t2[e2][3] && (n2 += " ", n2 += t2[e2][3], n2 += " ", n2 += t2[e2][4], null != t2[e2][5] && (n2 += " ", n2 += t2[e2][5], n2 += " ", n2 += t2[e2][6], null != t2[e2][7] && (n2 += " ", n2 += t2[e2][7])))));
    return n2 + " ";
  }(this);
}, move(t2, e2) {
  var i2 = this.bbox();
  if (t2 -= i2.x, e2 -= i2.y, !isNaN(t2) && !isNaN(e2)) for (var n2, s2 = this.length - 1; s2 >= 0; s2--) "M" === (n2 = this[s2][0]) || "L" === n2 || "T" === n2 ? (this[s2][1] += t2, this[s2][2] += e2) : "H" === n2 ? this[s2][1] += t2 : "V" === n2 ? this[s2][1] += e2 : "C" === n2 || "S" === n2 || "Q" === n2 ? (this[s2][1] += t2, this[s2][2] += e2, this[s2][3] += t2, this[s2][4] += e2, "C" === n2 && (this[s2][5] += t2, this[s2][6] += e2)) : "A" === n2 && (this[s2][6] += t2, this[s2][7] += e2);
  return this;
}, size(t2, e2) {
  var i2, n2, s2 = this.bbox();
  for (s2.width = 0 === s2.width ? 1 : s2.width, s2.height = 0 === s2.height ? 1 : s2.height, i2 = this.length - 1; i2 >= 0; i2--) "M" === (n2 = this[i2][0]) || "L" === n2 || "T" === n2 ? (this[i2][1] = (this[i2][1] - s2.x) * t2 / s2.width + s2.x, this[i2][2] = (this[i2][2] - s2.y) * e2 / s2.height + s2.y) : "H" === n2 ? this[i2][1] = (this[i2][1] - s2.x) * t2 / s2.width + s2.x : "V" === n2 ? this[i2][1] = (this[i2][1] - s2.y) * e2 / s2.height + s2.y : "C" === n2 || "S" === n2 || "Q" === n2 ? (this[i2][1] = (this[i2][1] - s2.x) * t2 / s2.width + s2.x, this[i2][2] = (this[i2][2] - s2.y) * e2 / s2.height + s2.y, this[i2][3] = (this[i2][3] - s2.x) * t2 / s2.width + s2.x, this[i2][4] = (this[i2][4] - s2.y) * e2 / s2.height + s2.y, "C" === n2 && (this[i2][5] = (this[i2][5] - s2.x) * t2 / s2.width + s2.x, this[i2][6] = (this[i2][6] - s2.y) * e2 / s2.height + s2.y)) : "A" === n2 && (this[i2][1] = this[i2][1] * t2 / s2.width, this[i2][2] = this[i2][2] * e2 / s2.height, this[i2][6] = (this[i2][6] - s2.x) * t2 / s2.width + s2.x, this[i2][7] = (this[i2][7] - s2.y) * e2 / s2.height + s2.y);
  return this;
}, equalCommands(t2) {
  var e2, i2, n2;
  for (t2 = new ie(t2), n2 = this.length === t2.length, e2 = 0, i2 = this.length; n2 && e2 < i2; e2++) n2 = this[e2][0] === t2[e2][0];
  return n2;
}, morph(t2) {
  return t2 = new ie(t2), this.equalCommands(t2) ? this.destination = t2 : this.destination = null, this;
}, at(t2) {
  if (!this.destination) return this;
  var e2, i2, n2, s2, r2 = this.destination.value, h2 = [], o2 = new ie();
  for (e2 = 0, i2 = this.length; e2 < i2; e2++) {
    for (h2[e2] = [this[e2][0]], n2 = 1, s2 = this[e2].length; n2 < s2; n2++) h2[e2][n2] = this[e2][n2] + (r2[e2][n2] - this[e2][n2]) * t2;
    "A" === h2[e2][0] && (h2[e2][4] = +(0 !== h2[e2][4]), h2[e2][5] = +(0 !== h2[e2][5]));
  }
  return o2.value = h2, o2;
}, parse(t2 = [["M", 0, 0]]) {
  if (t2 instanceof ie) return t2;
  var e2, i2 = { M: 2, L: 2, H: 1, V: 1, C: 6, S: 4, Q: 4, T: 2, A: 7, Z: 0 };
  t2 = "string" == typeof t2 ? t2.replace(W, ne).replace(F, " $& ").replace(K, "$1 -").trim().split(R) : t2.reduce(function(t3, e3) {
    return [].concat.call(t3, e3);
  }, []);
  var n2 = [], s2 = new et(), r2 = new et(), h2 = 0, o2 = t2.length;
  do {
    q.test(t2[h2]) ? (e2 = t2[h2], ++h2) : "M" === e2 ? e2 = "L" : "m" === e2 && (e2 = "l"), n2.push(se[e2].call(null, t2.slice(h2, h2 += i2[e2.toUpperCase()]).map(parseFloat), s2, r2));
  } while (o2 > h2);
  return n2;
}, bbox() {
  return st().path.setAttribute("d", this.toString()), st.nodes.path.getBBox();
} });
var ae = class {
  constructor(t2) {
    this._stepper = t2 || new Jt("-"), this._from = null, this._to = null, this._type = null, this._context = null, this._morphObj = null;
  }
  from(t2) {
    return null == t2 ? this._from : (this._from = this._set(t2), this);
  }
  to(t2) {
    return null == t2 ? this._to : (this._to = this._set(t2), this);
  }
  type(t2) {
    return null == t2 ? this._type : (this._type = t2, this);
  }
  _set(t2) {
    if (!this._type) {
      var e2 = typeof t2;
      "number" === e2 ? this.type(_t) : "string" === e2 ? tt.isColor(t2) ? this.type(tt) : R.test(t2) ? this.type(F.test(t2) ? ie : vt) : M.test(t2) ? this.type(_t) : this.type(ue) : de.indexOf(t2.constructor) > -1 ? this.type(t2.constructor) : Array.isArray(t2) ? this.type(vt) : "object" === e2 ? this.type(ce) : this.type(ue);
    }
    var i2 = new this._type(t2);
    return this._type === tt && (i2 = this._to ? i2[this._to[4]]() : this._from ? i2[this._from[4]]() : i2), i2 = i2.toArray(), this._morphObj = this._morphObj || new this._type(), this._context = this._context || Array.apply(null, Array(i2.length)).map(Object).map(function(t3) {
      return t3.done = true, t3;
    }), i2;
  }
  stepper(t2) {
    return null == t2 ? this._stepper : (this._stepper = t2, this);
  }
  done() {
    return this._context.map(this._stepper.done).reduce(function(t2, e2) {
      return t2 && e2;
    }, true);
  }
  at(t2) {
    var e2 = this;
    return this._morphObj.fromArray(this._from.map(function(i2, n2) {
      return e2._stepper.step(i2, e2._to[n2], t2, e2._context[n2], e2._context);
    }));
  }
};
var ue = class {
  constructor(...t2) {
    this.init(...t2);
  }
  init(t2) {
    return t2 = Array.isArray(t2) ? t2[0] : t2, this.value = t2, this;
  }
  valueOf() {
    return this.value;
  }
  toArray() {
    return [this.value];
  }
};
var le = class _le {
  constructor(...t2) {
    this.init(...t2);
  }
  init(t2) {
    return Array.isArray(t2) && (t2 = { scaleX: t2[0], scaleY: t2[1], shear: t2[2], rotate: t2[3], translateX: t2[4], translateY: t2[5], originX: t2[6], originY: t2[7] }), Object.assign(this, _le.defaults, t2), this;
  }
  toArray() {
    var t2 = this;
    return [t2.scaleX, t2.scaleY, t2.shear, t2.rotate, t2.translateX, t2.translateY, t2.originX, t2.originY];
  }
};
le.defaults = { scaleX: 1, scaleY: 1, shear: 0, rotate: 0, translateX: 0, translateY: 0, originX: 0, originY: 0 };
var ce = class {
  constructor(...t2) {
    this.init(...t2);
  }
  init(t2) {
    if (this.values = [], !Array.isArray(t2)) {
      t2 = t2 || {};
      var e2 = [];
      for (const i2 in t2) e2.push([i2, t2[i2]]);
      return e2.sort((t3, e3) => t3[0] - e3[0]), this.values = e2.reduce((t3, e3) => t3.concat(e3), []), this;
    }
    this.values = t2;
  }
  valueOf() {
    for (var t2 = {}, e2 = this.values, i2 = 0, n2 = e2.length; i2 < n2; i2 += 2) t2[e2[i2]] = e2[i2 + 1];
    return t2;
  }
  toArray() {
    return this.values;
  }
};
var de = [ue, le, ce];
var fe = class extends Lt {
  constructor(t2) {
    super(w("path", t2), t2);
  }
  array() {
    return this._array || (this._array = new ie(this.attr("d")));
  }
  plot(t2) {
    return null == t2 ? this.array() : this.clear().attr("d", "string" == typeof t2 ? t2 : this._array = new ie(t2));
  }
  clear() {
    return delete this._array, this;
  }
  move(t2, e2) {
    return this.attr("d", this.array().move(t2, e2));
  }
  x(t2) {
    return null == t2 ? this.bbox().x : this.move(t2, this.bbox().y);
  }
  y(t2) {
    return null == t2 ? this.bbox().y : this.move(this.bbox().x, t2);
  }
  size(t2, e2) {
    var i2 = u(this, t2, e2);
    return this.attr("d", this.array().size(i2.width, i2.height));
  }
  width(t2) {
    return null == t2 ? this.bbox().width : this.size(t2, this.bbox().height);
  }
  height(t2) {
    return null == t2 ? this.bbox().height : this.size(this.bbox().width, t2);
  }
  targets() {
    return ct('svg textpath [href*="' + this.id() + '"]');
  }
};
fe.prototype.MorphArray = ie, i({ Container: { path: T(function(t2) {
  return this.put(new fe()).plot(t2 || new ie());
}) } }), O(fe, "Path");
var pe = Object.freeze({ __proto__: null, array: function() {
  return this._array || (this._array = new Bt(this.attr("points")));
}, plot: function(t2) {
  return null == t2 ? this.array() : this.clear().attr("points", "string" == typeof t2 ? t2 : this._array = new Bt(t2));
}, clear: function() {
  return delete this._array, this;
}, move: function(t2, e2) {
  return this.attr("points", this.array().move(t2, e2));
}, size: function(t2, e2) {
  const i2 = u(this, t2, e2);
  return this.attr("points", this.array().size(i2.width, i2.height));
} });
var me = class extends Lt {
  constructor(t2) {
    super(w("polygon", t2), t2);
  }
};
i({ Container: { polygon: T(function(t2) {
  return this.put(new me()).plot(t2 || new Bt());
}) } }), k(me, Xt), k(me, pe), O(me, "Polygon");
var ye = class extends Lt {
  constructor(t2) {
    super(w("polyline", t2), t2);
  }
};
i({ Container: { polyline: T(function(t2) {
  return this.put(new ye()).plot(t2 || new Bt());
}) } }), k(ye, Xt), k(ye, pe), O(ye, "Polyline");
var ge = class extends Lt {
  constructor(t2) {
    super(w("rect", t2), t2);
  }
};
k(ge, { rx: Nt, ry: St }), i({ Container: { rect: T(function(t2, e2) {
  return this.put(new ge()).size(t2, e2);
}) } }), O(ge, "Rect");
var ve = class {
  constructor() {
    this._first = null, this._last = null;
  }
  push(t2) {
    var e2 = t2.next ? t2 : { value: t2, next: null, prev: null };
    return this._last ? (e2.prev = this._last, this._last.next = e2, this._last = e2) : (this._last = e2, this._first = e2), e2;
  }
  shift() {
    var t2 = this._first;
    return t2 ? (this._first = t2.next, this._first && (this._first.prev = null), this._last = this._first ? this._last : null, t2.value) : null;
  }
  first() {
    return this._first && this._first.value;
  }
  last() {
    return this._last && this._last.value;
  }
  remove(t2) {
    t2.prev && (t2.prev.next = t2.next), t2.next && (t2.next.prev = t2.prev), t2 === this._last && (this._last = t2.prev), t2 === this._first && (this._first = t2.next), t2.prev = null, t2.next = null;
  }
};
var _e = { nextDraw: null, frames: new ve(), timeouts: new ve(), immediates: new ve(), timer: () => p.window.performance || p.window.Date, transforms: [], frame(t2) {
  var e2 = _e.frames.push({ run: t2 });
  return null === _e.nextDraw && (_e.nextDraw = p.window.requestAnimationFrame(_e._draw)), e2;
}, timeout(t2, e2) {
  e2 = e2 || 0;
  var i2 = _e.timer().now() + e2, n2 = _e.timeouts.push({ run: t2, time: i2 });
  return null === _e.nextDraw && (_e.nextDraw = p.window.requestAnimationFrame(_e._draw)), n2;
}, immediate(t2) {
  var e2 = _e.immediates.push(t2);
  return null === _e.nextDraw && (_e.nextDraw = p.window.requestAnimationFrame(_e._draw)), e2;
}, cancelFrame(t2) {
  null != t2 && _e.frames.remove(t2);
}, clearTimeout(t2) {
  null != t2 && _e.timeouts.remove(t2);
}, cancelImmediate(t2) {
  null != t2 && _e.immediates.remove(t2);
}, _draw(t2) {
  for (var e2 = null, i2 = _e.timeouts.last(); (e2 = _e.timeouts.shift()) && (t2 >= e2.time ? e2.run() : _e.timeouts.push(e2), e2 !== i2); ) ;
  for (var n2 = null, s2 = _e.frames.last(); n2 !== s2 && (n2 = _e.frames.shift()); ) n2.run(t2);
  for (var r2 = null; r2 = _e.immediates.shift(); ) r2();
  _e.nextDraw = _e.timeouts.first() || _e.frames.first() ? p.window.requestAnimationFrame(_e._draw) : null;
} };
var we = function(t2) {
  var e2 = t2.start, i2 = t2.runner.duration();
  return { start: e2, duration: i2, end: e2 + i2, runner: t2.runner };
};
var be = function() {
  const t2 = p.window;
  return (t2.performance || t2.Date).now();
};
var xe = class extends dt {
  constructor(t2 = be) {
    super(), this._timeSource = t2, this._startTime = 0, this._speed = 1, this._persist = 0, this._nextFrame = null, this._paused = true, this._runners = [], this._runnerIds = [], this._lastRunnerId = -1, this._time = 0, this._lastSourceTime = 0, this._lastStepTime = 0, this._step = this._stepFn.bind(this, false), this._stepImmediate = this._stepFn.bind(this, true);
  }
  schedule(t2, e2, i2) {
    if (null == t2) return this._runners.map(we);
    var n2 = 0, s2 = this.getEndTime();
    if (e2 = e2 || 0, null == i2 || "last" === i2 || "after" === i2) n2 = s2;
    else if ("absolute" === i2 || "start" === i2) n2 = e2, e2 = 0;
    else if ("now" === i2) n2 = this._time;
    else {
      if ("relative" !== i2) throw new Error('Invalid value for the "when" parameter');
      {
        const i3 = this._runners[t2.id];
        i3 && (n2 = i3.start + e2, e2 = 0);
      }
    }
    t2.unschedule(), t2.timeline(this);
    const r2 = t2.persist(), h2 = { persist: null === r2 ? this._persist : r2, start: n2 + e2, runner: t2 };
    return this._lastRunnerId = t2.id, this._runners.push(h2), this._runners.sort((t3, e3) => t3.start - e3.start), this._runnerIds = this._runners.map((t3) => t3.runner.id), this.updateTime()._continue(), this;
  }
  unschedule(t2) {
    var e2 = this._runnerIds.indexOf(t2.id);
    return e2 < 0 || (this._runners.splice(e2, 1), this._runnerIds.splice(e2, 1), t2.timeline(null)), this;
  }
  getEndTime() {
    var t2 = this._runners[this._runnerIds.indexOf(this._lastRunnerId)], e2 = t2 ? t2.runner.duration() : 0;
    return (t2 ? t2.start : 0) + e2;
  }
  getEndTimeOfTimeline() {
    let t2 = 0;
    for (var e2 = 0; e2 < this._runners.length; e2++) {
      const n2 = this._runners[e2];
      var i2 = n2 ? n2.runner.duration() : 0;
      const s2 = (n2 ? n2.start : 0) + i2;
      s2 > t2 && (t2 = s2);
    }
    return t2;
  }
  updateTime() {
    return this.active() || (this._lastSourceTime = this._timeSource()), this;
  }
  play() {
    return this._paused = false, this.updateTime()._continue();
  }
  pause() {
    return this._paused = true, this._continue();
  }
  stop() {
    return this.time(0), this.pause();
  }
  finish() {
    return this.time(this.getEndTimeOfTimeline() + 1), this.pause();
  }
  speed(t2) {
    return null == t2 ? this._speed : (this._speed = t2, this);
  }
  reverse(t2) {
    var e2 = this.speed();
    if (null == t2) return this.speed(-e2);
    var i2 = Math.abs(e2);
    return this.speed(t2 ? i2 : -i2);
  }
  seek(t2) {
    return this.time(this._time + t2);
  }
  time(t2) {
    return null == t2 ? this._time : (this._time = t2, this._continue(true));
  }
  persist(t2) {
    return null == t2 ? this._persist : (this._persist = t2, this);
  }
  source(t2) {
    return null == t2 ? this._timeSource : (this._timeSource = t2, this);
  }
  _stepFn(t2 = false) {
    var e2 = this._timeSource(), i2 = e2 - this._lastSourceTime;
    t2 && (i2 = 0);
    var n2 = this._speed * i2 + (this._time - this._lastStepTime);
    this._lastSourceTime = e2, t2 || (this._time += n2, this._time = this._time < 0 ? 0 : this._time), this._lastStepTime = this._time, this.fire("time", this._time);
    for (var s2 = this._runners.length; s2--; ) {
      const t3 = this._runners[s2], e3 = t3.runner;
      this._time - t3.start <= 0 && e3.reset();
    }
    for (var r2 = false, h2 = 0, o2 = this._runners.length; h2 < o2; h2++) {
      const t3 = this._runners[h2], e3 = t3.runner;
      let i3 = n2;
      const s3 = this._time - t3.start;
      if (s3 <= 0) r2 = true;
      else if (s3 < i3 && (i3 = s3), e3.active()) if (e3.step(i3).done) {
        if (true !== t3.persist) {
          e3.duration() - e3.time() + this._time + t3.persist < this._time && (e3.unschedule(), --h2, --o2);
        }
      } else r2 = true;
    }
    return r2 && !(this._speed < 0 && 0 === this._time) || this._runnerIds.length && this._speed < 0 && this._time > 0 ? this._continue() : (this.pause(), this.fire("finished")), this;
  }
  _continue(t2 = false) {
    return _e.cancelFrame(this._nextFrame), this._nextFrame = null, t2 ? this._stepImmediate() : (this._paused || (this._nextFrame = _e.frame(this._step)), this);
  }
  active() {
    return !!this._nextFrame;
  }
};
i({ Element: { timeline: function(t2) {
  return null == t2 ? (this._timeline = this._timeline || new xe(), this._timeline) : (this._timeline = t2, this);
} } });
var Oe = class _Oe extends dt {
  constructor(t2) {
    super(), this.id = _Oe.id++, t2 = "function" == typeof (t2 = null == t2 ? pt : t2) ? new te(t2) : t2, this._element = null, this._timeline = null, this.done = false, this._queue = [], this._duration = "number" == typeof t2 && t2, this._isDeclarative = t2 instanceof te, this._stepper = this._isDeclarative ? t2 : new Jt(), this._history = {}, this.enabled = true, this._time = 0, this._lastTime = 0, this._reseted = true, this.transforms = new nt(), this.transformId = 1, this._haveReversed = false, this._reverse = false, this._loopsDone = 0, this._swing = false, this._wait = 0, this._times = 1, this._frameId = null, this._persist = !!this._isDeclarative || null;
  }
  element(t2) {
    return null == t2 ? this._element : (this._element = t2, t2._prepareRunner(), this);
  }
  timeline(t2) {
    return void 0 === t2 ? this._timeline : (this._timeline = t2, this);
  }
  animate(t2, e2, i2) {
    var n2 = _Oe.sanitise(t2, e2, i2), s2 = new _Oe(n2.duration);
    return this._timeline && s2.timeline(this._timeline), this._element && s2.element(this._element), s2.loop(n2).schedule(n2.delay, n2.when);
  }
  schedule(t2, e2, i2) {
    if (t2 instanceof xe || (i2 = e2, e2 = t2, t2 = this.timeline()), !t2) throw Error("Runner cannot be scheduled without timeline");
    return t2.schedule(this, e2, i2), this;
  }
  unschedule() {
    var t2 = this.timeline();
    return t2 && t2.unschedule(this), this;
  }
  loop(t2, e2, i2) {
    return "object" == typeof t2 && (e2 = t2.swing, i2 = t2.wait, t2 = t2.times), this._times = t2 || 1 / 0, this._swing = e2 || false, this._wait = i2 || 0, true === this._times && (this._times = 1 / 0), this;
  }
  delay(t2) {
    return this.animate(0, t2);
  }
  queue(t2, e2, i2, n2) {
    return this._queue.push({ initialiser: t2 || ft, runner: e2 || ft, retarget: i2, isTransform: n2, initialised: false, finished: false }), this.timeline() && this.timeline()._continue(), this;
  }
  during(t2) {
    return this.queue(null, t2);
  }
  after(t2) {
    return this.on("finished", t2);
  }
  time(t2) {
    if (null == t2) return this._time;
    const e2 = t2 - this._time;
    return this.step(e2), this;
  }
  duration() {
    return this._times * (this._wait + this._duration) - this._wait;
  }
  loops(t2) {
    var e2 = this._duration + this._wait;
    if (null == t2) {
      var i2 = Math.floor(this._time / e2), n2 = (this._time - i2 * e2) / this._duration;
      return Math.min(i2 + n2, this._times);
    }
    var s2 = t2 % 1, r2 = e2 * Math.floor(t2) + this._duration * s2;
    return this.time(r2);
  }
  persist(t2) {
    return null == t2 ? this._persist : (this._persist = t2, this);
  }
  position(t2) {
    var e2, i2 = this._time, n2 = this._duration, s2 = this._wait, r2 = this._times, h2 = this._swing, o2 = this._reverse;
    if (null == t2) {
      const t3 = function(t4) {
        var e3 = h2 * Math.floor(t4 % (2 * (s2 + n2)) / (s2 + n2)), i3 = e3 && !o2 || !e3 && o2, r3 = Math.pow(-1, i3) * (t4 % (s2 + n2)) / n2 + i3;
        return Math.max(Math.min(r3, 1), 0);
      };
      var a2 = r2 * (s2 + n2) - s2;
      return e2 = i2 <= 0 ? Math.round(t3(1e-5)) : i2 < a2 ? t3(i2) : Math.round(t3(a2 - 1e-5));
    }
    var u2 = Math.floor(this.loops()), l2 = h2 && u2 % 2 == 0;
    return e2 = u2 + (l2 && !o2 || o2 && l2 ? t2 : 1 - t2), this.loops(e2);
  }
  progress(t2) {
    return null == t2 ? Math.min(1, this._time / this.duration()) : this.time(t2 * this.duration());
  }
  step(t2) {
    if (!this.enabled) return this;
    t2 = null == t2 ? 16 : t2, this._time += t2;
    var e2 = this.position(), i2 = this._lastPosition !== e2 && this._time >= 0;
    this._lastPosition = e2;
    var n2 = this.duration(), s2 = this._lastTime <= 0 && this._time > 0, r2 = this._lastTime < n2 && this._time >= n2;
    this._lastTime = this._time, s2 && this.fire("start", this);
    var h2 = this._isDeclarative;
    if (this.done = !h2 && !r2 && this._time >= n2, this._reseted = false, i2 || h2) {
      this._initialise(i2), this.transforms = new nt();
      var o2 = this._run(h2 ? t2 : e2);
      this.fire("step", this);
    }
    return this.done = this.done || o2 && h2, r2 && this.fire("finished", this), this;
  }
  reset() {
    return this._reseted || (this.time(0), this._reseted = true), this;
  }
  finish() {
    return this.step(1 / 0);
  }
  reverse(t2) {
    return this._reverse = null == t2 ? !this._reverse : t2, this;
  }
  ease(t2) {
    return this._stepper = new Jt(t2), this;
  }
  active(t2) {
    return null == t2 ? this.enabled : (this.enabled = t2, this);
  }
  _rememberMorpher(t2, e2) {
    if (this._history[t2] = { morpher: e2, caller: this._queue[this._queue.length - 1] }, this._isDeclarative) {
      var i2 = this.timeline();
      i2 && i2.play();
    }
  }
  _tryRetarget(t2, e2, i2) {
    if (this._history[t2]) {
      if (!this._history[t2].caller.initialised) {
        const e3 = this._queue.indexOf(this._history[t2].caller);
        return this._queue.splice(e3, 1), false;
      }
      this._history[t2].caller.retarget ? this._history[t2].caller.retarget(e2, i2) : this._history[t2].morpher.to(e2), this._history[t2].caller.finished = false;
      var n2 = this.timeline();
      return n2 && n2.play(), true;
    }
    return false;
  }
  _initialise(t2) {
    if (t2 || this._isDeclarative) for (var e2 = 0, i2 = this._queue.length; e2 < i2; ++e2) {
      var n2 = this._queue[e2], s2 = this._isDeclarative || !n2.initialised && t2;
      t2 = !n2.finished, s2 && t2 && (n2.initialiser.call(this), n2.initialised = true);
    }
  }
  _run(t2) {
    for (var e2 = true, i2 = 0, n2 = this._queue.length; i2 < n2; ++i2) {
      var s2 = this._queue[i2], r2 = s2.runner.call(this, t2);
      s2.finished = s2.finished || true === r2, e2 = e2 && s2.finished;
    }
    return e2;
  }
  addTransform(t2, e2) {
    return this.transforms.lmultiplyO(t2), this;
  }
  clearTransform() {
    return this.transforms = new nt(), this;
  }
  clearTransformsFromQueue() {
    this.done && this._timeline && this._timeline._runnerIds.includes(this.id) || (this._queue = this._queue.filter((t2) => !t2.isTransform));
  }
  static sanitise(t2, e2, i2) {
    var n2 = 1, s2 = false, r2 = 0;
    return e2 = e2 || yt, i2 = i2 || "last", "object" != typeof (t2 = t2 || pt) || t2 instanceof Zt || (e2 = t2.delay || e2, i2 = t2.when || i2, s2 = t2.swing || s2, n2 = t2.times || n2, r2 = t2.wait || r2, t2 = t2.duration || pt), { duration: t2, delay: e2, swing: s2, times: n2, wait: r2, when: i2 };
  }
};
Oe.id = 0;
var Ne = class {
  constructor(t2 = new nt(), e2 = -1, i2 = true) {
    this.transforms = t2, this.id = e2, this.done = i2;
  }
  clearTransformsFromQueue() {
  }
};
k([Oe, Ne], { mergeWith(t2) {
  return new Ne(t2.transforms.lmultiply(this.transforms), t2.id);
} });
var Se = (t2, e2) => t2.lmultiplyO(e2);
var ke = (t2) => t2.transforms;
function Te() {
  const t2 = this._transformationRunners.runners.map(ke).reduce(Se, new nt());
  this.transform(t2), this._transformationRunners.merge(), 1 === this._transformationRunners.length() && (this._frameId = null);
}
var Me = class {
  constructor() {
    this.runners = [], this.ids = [];
  }
  add(t2) {
    if (this.runners.includes(t2)) return;
    const e2 = t2.id + 1;
    return this.runners.push(t2), this.ids.push(e2), this;
  }
  getByID(t2) {
    return this.runners[this.ids.indexOf(t2 + 1)];
  }
  remove(t2) {
    const e2 = this.ids.indexOf(t2 + 1);
    return this.ids.splice(e2, 1), this.runners.splice(e2, 1), this;
  }
  merge() {
    let t2 = null;
    return this.runners.forEach((e2, i2) => {
      t2 && e2.done && t2.done && (!e2._timeline || !e2._timeline._runnerIds.includes(e2.id)) && (!t2._timeline || !t2._timeline._runnerIds.includes(t2.id)) && (this.remove(e2.id), this.edit(t2.id, e2.mergeWith(t2))), t2 = e2;
    }), this;
  }
  edit(t2, e2) {
    const i2 = this.ids.indexOf(t2 + 1);
    return this.ids.splice(i2, 1, t2 + 1), this.runners.splice(i2, 1, e2), this;
  }
  length() {
    return this.ids.length;
  }
  clearBefore(t2) {
    const e2 = this.ids.indexOf(t2 + 1) || 1;
    return this.ids.splice(0, e2, 0), this.runners.splice(0, e2, new Ne()).forEach((t3) => t3.clearTransformsFromQueue()), this;
  }
};
i({ Element: { animate(t2, e2, i2) {
  var n2 = Oe.sanitise(t2, e2, i2), s2 = this.timeline();
  return new Oe(n2.duration).loop(n2).element(this).timeline(s2.play()).schedule(n2.delay, n2.when);
}, delay(t2, e2) {
  return this.animate(0, t2, e2);
}, _clearTransformRunnersBefore(t2) {
  this._transformationRunners.clearBefore(t2.id);
}, _currentTransform(t2) {
  return this._transformationRunners.runners.filter((e2) => e2.id <= t2.id).map(ke).reduce(Se, new nt());
}, _addRunner(t2) {
  this._transformationRunners.add(t2), _e.cancelImmediate(this._frameId), this._frameId = _e.immediate(Te.bind(this));
}, _prepareRunner() {
  null == this._frameId && (this._transformationRunners = new Me().add(new Ne(new nt(this))));
} } }), k(Oe, { attr(t2, e2) {
  return this.styleAttr("attr", t2, e2);
}, css(t2, e2) {
  return this.styleAttr("css", t2, e2);
}, styleAttr(t2, e2, i2) {
  if ("object" == typeof e2) {
    for (var n2 in e2) this.styleAttr(t2, n2, e2[n2]);
    return this;
  }
  var s2 = new ae(this._stepper).to(i2);
  return this.queue(function() {
    s2 = s2.from(this.element()[t2](e2));
  }, function(i3) {
    return this.element()[t2](e2, s2.at(i3)), s2.done();
  }), this;
}, zoom(t2, e2) {
  if (this._tryRetarget("zoom", Ft, e2)) return this;
  var i2 = new ae(this._stepper).to(new _t(t2));
  return this.queue(function() {
    i2 = i2.from(this.element().zoom());
  }, function(t3) {
    return this.element().zoom(i2.at(t3), e2), i2.done();
  }, function(t3, n2) {
    e2 = n2, i2.to(t3);
  }), this._rememberMorpher("zoom", i2), this;
}, transform(t2, e2, i2) {
  if (e2 = t2.relative || e2, this._isDeclarative && !e2 && this._tryRetarget("transform", t2)) return this;
  var n2 = nt.isMatrixLike(t2);
  i2 = null != t2.affine ? t2.affine : null != i2 ? i2 : !n2;
  const s2 = new ae(this._stepper).type(i2 ? le : nt);
  let r2, h2, o2, a2, u2;
  return this.queue(function() {
    h2 = h2 || this.element(), r2 = r2 || l(t2, h2), u2 = new nt(e2 ? void 0 : h2), h2._addRunner(this), e2 || h2._clearTransformRunnersBefore(this);
  }, function(l2) {
    e2 || this.clearTransform();
    const { x: c2, y: d2 } = new et(r2).transform(h2._currentTransform(this));
    let f2 = new nt({ ...t2, origin: [c2, d2] }), p2 = this._isDeclarative && o2 ? o2 : u2;
    if (i2) {
      f2 = f2.decompose(c2, d2), p2 = p2.decompose(c2, d2);
      const t3 = f2.rotate, e3 = p2.rotate, i3 = [t3 - 360, t3, t3 + 360], n3 = i3.map((t4) => Math.abs(t4 - e3)), s3 = Math.min(...n3), r3 = n3.indexOf(s3);
      f2.rotate = i3[r3];
    }
    e2 && (n2 || (f2.rotate = t2.rotate || 0), this._isDeclarative && a2 && (p2.rotate = a2)), s2.from(p2), s2.to(f2);
    const m2 = s2.at(l2);
    return a2 = m2.rotate, o2 = new nt(m2), this.addTransform(o2), h2._addRunner(this), s2.done();
  }, function(e3) {
    (e3.origin || "center").toString() !== (t2.origin || "center").toString() && (r2 = l(t2, h2)), t2 = { ...e3, origin: r2 };
  }, true), this._isDeclarative && this._rememberMorpher("transform", s2), this;
}, x(t2, e2) {
  return this._queueNumber("x", t2);
}, y(t2) {
  return this._queueNumber("y", t2);
}, dx(t2 = 0) {
  return this._queueNumberDelta("x", t2);
}, dy(t2 = 0) {
  return this._queueNumberDelta("y", t2);
}, dmove(t2, e2) {
  return this.dx(t2).dy(e2);
}, _queueNumberDelta(t2, e2) {
  if (e2 = new _t(e2), this._tryRetarget(t2, e2)) return this;
  var i2 = new ae(this._stepper).to(e2), n2 = null;
  return this.queue(function() {
    n2 = this.element()[t2](), i2.from(n2), i2.to(n2 + e2);
  }, function(e3) {
    return this.element()[t2](i2.at(e3)), i2.done();
  }, function(t3) {
    i2.to(n2 + new _t(t3));
  }), this._rememberMorpher(t2, i2), this;
}, _queueObject(t2, e2) {
  if (this._tryRetarget(t2, e2)) return this;
  var i2 = new ae(this._stepper).to(e2);
  return this.queue(function() {
    i2.from(this.element()[t2]());
  }, function(e3) {
    return this.element()[t2](i2.at(e3)), i2.done();
  }), this._rememberMorpher(t2, i2), this;
}, _queueNumber(t2, e2) {
  return this._queueObject(t2, new _t(e2));
}, cx(t2) {
  return this._queueNumber("cx", t2);
}, cy(t2) {
  return this._queueNumber("cy", t2);
}, move(t2, e2) {
  return this.x(t2).y(e2);
}, center(t2, e2) {
  return this.cx(t2).cy(e2);
}, size(t2, e2) {
  var i2;
  return t2 && e2 || (i2 = this._element.bbox()), t2 || (t2 = i2.width / i2.height * e2), e2 || (e2 = i2.height / i2.width * t2), this.width(t2).height(e2);
}, width(t2) {
  return this._queueNumber("width", t2);
}, height(t2) {
  return this._queueNumber("height", t2);
}, plot(t2, e2, i2, n2) {
  if (4 === arguments.length) return this.plot([t2, e2, i2, n2]);
  if (this._tryRetarget("plot", t2)) return this;
  var s2 = new ae(this._stepper).type(this._element.MorphArray).to(t2);
  return this.queue(function() {
    s2.from(this._element.array());
  }, function(t3) {
    return this._element.plot(s2.at(t3)), s2.done();
  }), this._rememberMorpher("plot", s2), this;
}, leading(t2) {
  return this._queueNumber("leading", t2);
}, viewbox(t2, e2, i2, n2) {
  return this._queueObject("viewbox", new ht(t2, e2, i2, n2));
}, update(t2) {
  return "object" != typeof t2 ? this.update({ offset: arguments[0], color: arguments[1], opacity: arguments[2] }) : (null != t2.opacity && this.attr("stop-opacity", t2.opacity), null != t2.color && this.attr("stop-color", t2.color), null != t2.offset && this.attr("offset", t2.offset), this);
} }), k(Oe, { rx: Nt, ry: St, from: Kt, to: Ft }), O(Oe, "Runner");
var Ae = class extends Dt {
  constructor(t2) {
    super(w("svg", t2), t2), this.namespace();
  }
  isRoot() {
    return !(this.node.parentNode && this.node.parentNode instanceof p.window.SVGElement && "#document" !== this.node.parentNode.nodeName);
  }
  root() {
    return this.isRoot() ? this : super.root();
  }
  namespace() {
    return this.isRoot() ? this.attr({ xmlns: c, version: "1.1" }).attr("xmlns:xlink", f, d).attr("xmlns:svgjs", "http://svgjs.com/svgjs", d) : this.root().namespace();
  }
  defs() {
    return this.isRoot() ? b(this.node.querySelector("defs")) || this.put(new zt()) : this.root().defs();
  }
  parent(t2) {
    return this.isRoot() ? "#document" === this.node.parentNode.nodeName ? null : b(this.node.parentNode) : super.parent(t2);
  }
  clear() {
    for (; this.node.hasChildNodes(); ) this.node.removeChild(this.node.lastChild);
    return delete this._defs, this;
  }
};
i({ Container: { nested: T(function() {
  return this.put(new Ae());
}) } }), O(Ae, "Svg", true);
var Ce = class extends Dt {
  constructor(t2) {
    super(w("symbol", t2), t2);
  }
};
i({ Container: { symbol: T(function() {
  return this.put(new Ce());
}) } }), O(Ce, "Symbol");
var Ee = Object.freeze({ __proto__: null, plain: function(t2) {
  return false === this._build && this.clear(), this.node.appendChild(p.document.createTextNode(t2)), this;
}, length: function() {
  return this.node.getComputedTextLength();
} });
var Ie = class extends Lt {
  constructor(t2) {
    super(w("text", t2), t2), this.dom.leading = new _t(1.3), this._rebuild = true, this._build = false;
  }
  x(t2, e2 = this.bbox()) {
    return null == t2 ? e2.x : this.attr("x", this.attr("x") + t2 - e2.x);
  }
  y(t2, e2 = this.bbox()) {
    return null == t2 ? e2.y : this.attr("y", this.attr("y") + t2 - e2.y);
  }
  move(t2, e2, i2 = this.bbox()) {
    return this.x(t2, i2).y(e2, i2);
  }
  cx(t2, e2 = this.bbox()) {
    return null == t2 ? e2.cx : this.attr("x", this.attr("x") + t2 - e2.cx);
  }
  cy(t2, e2 = this.bbox()) {
    return null == t2 ? e2.cy : this.attr("y", this.attr("y") + t2 - e2.cy);
  }
  center(t2, e2, i2 = this.bbox()) {
    return this.cx(t2, i2).cy(e2, i2);
  }
  text(t2) {
    if (void 0 === t2) {
      var e2 = this.node.childNodes, i2 = 0;
      t2 = "";
      for (var n2 = 0, s2 = e2.length; n2 < s2; ++n2) "textPath" !== e2[n2].nodeName ? (n2 !== i2 && 3 !== e2[n2].nodeType && true === b(e2[n2]).dom.newLined && (t2 += "\n"), t2 += e2[n2].textContent) : 0 === n2 && (i2 = 1);
      return t2;
    }
    if (this.clear().build(true), "function" == typeof t2) t2.call(this, this);
    else for (var r2 = 0, h2 = (t2 = t2.split("\n")).length; r2 < h2; r2++) this.tspan(t2[r2]).newLine();
    return this.build(false).rebuild();
  }
  leading(t2) {
    return null == t2 ? this.dom.leading : (this.dom.leading = new _t(t2), this.rebuild());
  }
  rebuild(t2) {
    if ("boolean" == typeof t2 && (this._rebuild = t2), this._rebuild) {
      var e2 = this, i2 = 0, n2 = this.dom.leading;
      this.each(function() {
        var t3 = p.window.getComputedStyle(this.node).getPropertyValue("font-size"), s2 = n2 * new _t(t3);
        this.dom.newLined && (this.attr("x", e2.attr("x")), "\n" === this.text() ? i2 += s2 : (this.attr("dy", s2 + i2), i2 = 0));
      }), this.fire("rebuild");
    }
    return this;
  }
  build(t2) {
    return this._build = !!t2, this;
  }
  setData(t2) {
    return this.dom = t2, this.dom.leading = new _t(t2.leading || 1.3), this;
  }
};
k(Ie, Ee), i({ Container: { text: T(function(t2) {
  return this.put(new Ie()).text(t2);
}), plain: T(function(t2) {
  return this.put(new Ie()).plain(t2);
}) } }), O(Ie, "Text");
var je = class extends Ie {
  constructor(t2) {
    super(w("tspan", t2), t2);
  }
  text(t2) {
    return null == t2 ? this.node.textContent + (this.dom.newLined ? "\n" : "") : ("function" == typeof t2 ? t2.call(this, this) : this.plain(t2), this);
  }
  dx(t2) {
    return this.attr("dx", t2);
  }
  dy(t2) {
    return this.attr("dy", t2);
  }
  x(t2) {
    return this.attr("x", t2);
  }
  y(t2) {
    return this.attr("x", t2);
  }
  move(t2, e2) {
    return this.x(t2).y(e2);
  }
  newLine() {
    var t2 = this.parent(Ie);
    this.dom.newLined = true;
    var e2 = p.window.getComputedStyle(this.node).getPropertyValue("font-size"), i2 = t2.dom.leading * new _t(e2);
    return this.dy(i2).attr("x", t2.x());
  }
};
k(je, Ee), i({ Tspan: { tspan: T(function(t2) {
  var e2 = new je();
  return this._build || this.clear(), this.node.appendChild(e2.node), e2.text(t2);
}) } }), O(je, "Tspan");
var Le = class extends Dt {
  constructor(t2) {
    super(w("clipPath", t2), t2);
  }
  remove() {
    return this.targets().forEach(function(t2) {
      t2.unclip();
    }), super.remove();
  }
  targets() {
    return ct('svg [clip-path*="' + this.id() + '"]');
  }
};
i({ Container: { clip: T(function() {
  return this.defs().put(new Le());
}) }, Element: { clipWith(t2) {
  const e2 = t2 instanceof Le ? t2 : this.parent().clip().add(t2);
  return this.attr("clip-path", 'url("#' + e2.id() + '")');
}, unclip() {
  return this.attr("clip-path", null);
}, clipper() {
  return this.reference("clip-path");
} } }), O(Le, "ClipPath");
var He = class extends xt {
  constructor(t2) {
    super(w("foreignObject", t2), t2);
  }
};
i({ Container: { foreignObject: T(function(t2, e2) {
  return this.put(new He()).size(t2, e2);
}) } }), O(He, "ForeignObject");
var De = class extends Dt {
  constructor(t2) {
    super(w("g", t2), t2);
  }
  x(t2, e2 = this.bbox()) {
    return null == t2 ? e2.x : this.move(t2, e2.y, e2);
  }
  y(t2, e2 = this.bbox()) {
    return null == t2 ? e2.y : this.move(e2.x, t2, e2);
  }
  move(t2 = 0, e2 = 0, i2 = this.bbox()) {
    const n2 = t2 - i2.x, s2 = e2 - i2.y;
    return this.dmove(n2, s2);
  }
  dx(t2) {
    return this.dmove(t2, 0);
  }
  dy(t2) {
    return this.dmove(0, t2);
  }
  dmove(t2, e2) {
    return this.children().forEach((i2, n2) => {
      const s2 = i2.bbox(), r2 = new nt(i2), h2 = r2.translate(t2, e2).transform(r2.inverse()), o2 = new et(s2.x, s2.y).transform(h2);
      i2.move(o2.x, o2.y);
    }), this;
  }
  width(t2, e2 = this.bbox()) {
    return null == t2 ? e2.width : this.size(t2, e2.height, e2);
  }
  height(t2, e2 = this.bbox()) {
    return null == t2 ? e2.height : this.size(e2.width, t2, e2);
  }
  size(t2, e2, i2 = this.bbox()) {
    const n2 = u(this, t2, e2, i2), s2 = n2.width / i2.width, r2 = n2.height / i2.height;
    return this.children().forEach((t3, e3) => {
      const n3 = new et(i2).transform(new nt(t3).inverse());
      t3.scale(s2, r2, n3.x, n3.y);
    }), this;
  }
};
i({ Container: { group: T(function() {
  return this.put(new De());
}) } }), O(De, "G");
var ze = class extends Dt {
  constructor(t2) {
    super(w("a", t2), t2);
  }
  to(t2) {
    return this.attr("href", t2, f);
  }
  target(t2) {
    return this.attr("target", t2);
  }
};
i({ Container: { link: T(function(t2) {
  return this.put(new ze()).to(t2);
}) }, Element: { linkTo: function(t2) {
  var e2 = new ze();
  return "function" == typeof t2 ? t2.call(e2, e2) : e2.to(t2), this.parent().put(e2).put(this);
} } }), O(ze, "A");
var Pe = class extends Dt {
  constructor(t2) {
    super(w("mask", t2), t2);
  }
  remove() {
    return this.targets().forEach(function(t2) {
      t2.unmask();
    }), super.remove();
  }
  targets() {
    return ct('svg [mask*="' + this.id() + '"]');
  }
};
i({ Container: { mask: T(function() {
  return this.defs().put(new Pe());
}) }, Element: { maskWith(t2) {
  var e2 = t2 instanceof Pe ? t2 : this.parent().mask().add(t2);
  return this.attr("mask", 'url("#' + e2.id() + '")');
}, unmask() {
  return this.attr("mask", null);
}, masker() {
  return this.reference("mask");
} } }), O(Pe, "Mask");
var Re = class extends xt {
  constructor(t2) {
    super(w("style", t2), t2);
  }
  addText(t2 = "") {
    return this.node.textContent += t2, this;
  }
  font(t2, e2, i2 = {}) {
    return this.rule("@font-face", { fontFamily: t2, src: e2, ...i2 });
  }
  rule(t2, e2) {
    return this.addText(function(t3, e3) {
      if (!t3) return "";
      if (!e3) return t3;
      var i2 = t3 + "{";
      for (var n2 in e3) i2 += n2.replace(/([A-Z])/g, function(t4, e4) {
        return "-" + e4.toLowerCase();
      }) + ":" + e3[n2] + ";";
      return i2 += "}";
    }(t2, e2));
  }
};
i("Dom", { style: T(function(t2, e2) {
  return this.put(new Re()).rule(t2, e2);
}), fontface: T(function(t2, e2, i2) {
  return this.put(new Re()).font(t2, e2, i2);
}) }), O(Re, "Style");
var Ke = class extends Ie {
  constructor(t2) {
    super(w("textPath", t2), t2);
  }
  array() {
    var t2 = this.track();
    return t2 ? t2.array() : null;
  }
  plot(t2) {
    var e2 = this.track(), i2 = null;
    return e2 && (i2 = e2.plot(t2)), null == t2 ? i2 : this;
  }
  track() {
    return this.reference("href");
  }
};
i({ Container: { textPath: T(function(t2, e2) {
  return t2 instanceof Ie || (t2 = this.text(t2)), t2.path(e2);
}) }, Text: { path: T(function(t2, e2 = true) {
  var i2 = new Ke();
  let n2;
  if (t2 instanceof fe || (t2 = this.defs().path(t2)), i2.attr("href", "#" + t2, f), e2) for (; n2 = this.node.firstChild; ) i2.node.appendChild(n2);
  return this.put(i2);
}), textPath() {
  return this.findOne("textPath");
} }, Path: { text: T(function(t2) {
  return t2 instanceof Ie || (t2 = new Ie().addTo(this.parent()).text(t2)), t2.path(this);
}), targets() {
  return ct('svg [href*="' + this.id() + '"]');
} } }), Ke.prototype.MorphArray = ie, O(Ke, "TextPath");
var Fe = class extends Lt {
  constructor(t2) {
    super(w("use", t2), t2);
  }
  element(t2, e2) {
    return this.attr("href", (e2 || "") + "#" + t2, f);
  }
};
i({ Container: { use: T(function(t2, e2) {
  return this.put(new Fe()).element(t2, e2);
}) } }), O(Fe, "Use");
var qe = _;
k([Ae, Ce, Yt, Wt, Vt], n("viewbox")), k([Gt, ye, me, fe], n("marker")), k(Ie, n("Text")), k(fe, n("Path")), k(zt, n("Defs")), k([Ie, je], n("Tspan")), k([ge, Pt, Ht, qt], n("radius")), k(dt, n("EventTarget")), k(bt, n("Dom")), k(xt, n("Element")), k(Lt, n("Shape")), k(Dt, n("Container")), k(Oe, n("Runner")), ut.extend([...new Set(e)]), function(t2 = []) {
  de.push(...[].concat(t2));
}([_t, tt, ht, nt, vt, Bt, ie]), k(de, { to(t2) {
  return new ae().type(this.constructor).from(this.valueOf()).to(t2);
}, fromArray(t2) {
  return this.init(t2), this;
} });
var We = function(t2, e2) {
  return (We = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t3, e3) {
    t3.__proto__ = e3;
  } || function(t3, e3) {
    for (var i2 in e3) e3.hasOwnProperty(i2) && (t3[i2] = e3[i2]);
  })(t2, e2);
};
function Ye(t2, e2) {
  function i2() {
    this.constructor = t2;
  }
  We(t2, e2), t2.prototype = null === e2 ? Object.create(e2) : (i2.prototype = e2.prototype, new i2());
}
var Be = function() {
  function t2(t3) {
    if ("string" == typeof t3) {
      if (!(t3.length > 0)) throw "Can't parse this note";
      if (this.note = t3[0].toUpperCase(), t3.length > 1) {
        var e2 = t3.substr(1);
        ["#", "b"].indexOf(t3[1]) > -1 && (t3.length > 2 && t3[1] === t3[2] ? this.accidental = t3.substr(1, 2) : this.accidental = t3[1], e2 = t3.substr(this.accidental.toString().length + 1)), e2.length > 0 && (this.octave = Number.parseInt(e2));
      }
    } else this.note = t3.note, this.accidental = t3.accidental, this.octave = t3.octave;
    this.toString = this.toString.bind(this);
  }
  return Object.defineProperty(t2.prototype, "baseNote", { get: function() {
    var t3, e2 = this, i2 = [{ note: "C" }, { note: "C", accidental: "#" }, { note: "D" }, { note: "D", accidental: "#" }, { note: "E" }, { note: "F" }, { note: "F", accidental: "#" }, { note: "G" }, { note: "G", accidental: "#" }, { note: "A" }, { note: "A", accidental: "#" }, { note: "B" }], n2 = i2.findIndex(function(t4) {
      return t4.note === e2.note && t4.accidental === e2.accidental;
    });
    if (n2 > -1) t3 = { note: i2[n2].note, accidental: i2[n2].accidental, octave: this.octave };
    else {
      switch (n2 = i2.findIndex(function(t4) {
        return t4.note === e2.note && void 0 === t4.accidental;
      }), this.accidental) {
        case "#":
          n2 += 1;
          break;
        case "##":
          n2 += 2;
          break;
        case "b":
          n2 -= 1;
          break;
        case "bb":
          n2 -= 2;
      }
      var s2 = 0;
      n2 < 0 ? (n2 += 12, s2 = -1) : n2 > 11 && (n2 -= 12, s2 = 1), t3 = { note: i2[n2].note, accidental: i2[n2].accidental, octave: void 0 !== this.octave ? this.octave + s2 : void 0 };
    }
    return t3;
  }, enumerable: true, configurable: true }), t2.prototype.toString = function() {
    var t3 = this.note.toString();
    return void 0 !== this.accidental && (t3 += this.accidental.toString()), void 0 !== this.octave && (t3 += this.octave.toString()), t3;
  }, t2;
}();
var Ue = function() {
  function t2() {
  }
  return t2.WHITE_KEY_RATIO = 6.4, t2.BLACK_KEY_RATIO = 6.6, t2.WHITE_BLACK_WIDTH_RATIO = 1.7, t2.NOTE_LIST = ["C", "D", "E", "F", "G", "A", "B"], t2.BLACK_BASE_NOTE_LIST = ["C", "D", "F", "G", "A"], t2;
}();
var Xe = function() {
  function t2(t3, e2, i2, n2) {
    this.container = t3, this.onKeyPress = i2, this.onKeyRelease = n2, this.instrumentSettings = e2;
  }
  return Object.defineProperty(t2.prototype, "boxWidth", { get: function() {
    return this.container.bbox().width;
  }, enumerable: true, configurable: true }), Object.defineProperty(t2.prototype, "boxHeight", { get: function() {
    return this.container.bbox().height;
  }, enumerable: true, configurable: true }), t2.prototype.move = function(t3, e2) {
    this.container.untransform(), this.container.translate(t3, e2);
  }, t2.prototype.setInstrumentSettings = function(t3) {
    this.instrumentSettings = t3;
  }, t2;
}();
var Ge = function(t2) {
  function e2(e3, i2, n2, s2, r2, h2, o2) {
    var a2 = t2.call(this, e3, i2, n2, s2) || this;
    return a2.highlightSize = 1, a2.isPressed = false, a2.isMouseDown = false, a2.width = r2, a2.height = h2, a2._note = o2, a2._displayNote = o2, a2.addMouseListeners = a2.addMouseListeners.bind(a2), a2.handleInputDown = a2.handleInputDown.bind(a2), a2.handleInputUp = a2.handleInputUp.bind(a2), a2;
  }
  return Ye(e2, t2), Object.defineProperty(e2.prototype, "note", { get: function() {
    return this._note;
  }, enumerable: true, configurable: true }), Object.defineProperty(e2.prototype, "displayNote", { get: function() {
    return this.isHighlighted ? this.getNoteIfHighlighted(function() {
      for (var t3 = 0, e3 = 0, i2 = arguments.length; e3 < i2; e3++) t3 += arguments[e3].length;
      var n2 = Array(t3), s2 = 0;
      for (e3 = 0; e3 < i2; e3++) for (var r2 = arguments[e3], h2 = 0, o2 = r2.length; h2 < o2; h2++, s2++) n2[s2] = r2[h2];
      return n2;
    }(this.instrumentSettings.highlightedNotes, this.instrumentSettings.specialHighlightedNotes)) : this._displayNote;
  }, enumerable: true, configurable: true }), Object.defineProperty(e2.prototype, "isHighlighted", { get: function() {
    return void 0 !== this.getNoteIfHighlighted(this.instrumentSettings.highlightedNotes) || this.isSpecialHighlighted;
  }, enumerable: true, configurable: true }), Object.defineProperty(e2.prototype, "isSpecialHighlighted", { get: function() {
    return void 0 !== this.getNoteIfHighlighted(this.instrumentSettings.specialHighlightedNotes);
  }, enumerable: true, configurable: true }), e2.prototype.addMouseListeners = function() {
    void 0 !== this._visual && (this._visual.on("mousedown", this.handleInputDown), this._visual.on("mouseup", this.handleInputUp), this._visual.on("mouseleave", this.handleInputUp), this._visual.on("touchstart", this.handleInputDown), this._visual.on("touchend", this.handleInputUp));
  }, e2.prototype.handleInputDown = function() {
    this.isMouseDown = true, void 0 !== this.onKeyPress && this.onKeyPress(this.note);
  }, e2.prototype.handleInputUp = function() {
    this.isMouseDown && (this.isMouseDown = false, void 0 !== this.onKeyRelease && this.onKeyRelease(this.note));
  }, e2.prototype.press = function(t3) {
    this.isPressed = true, this._displayNote = t3, this._label && "onpress" === this.instrumentSettings.showNoteNames && (this.updateLabel(), this._label.show());
  }, e2.prototype.release = function() {
    this.isPressed = false, this._label && "onpress" === this.instrumentSettings.showNoteNames && this._label.hide();
  }, e2.prototype.backward = function() {
    this.container.backward();
  }, e2.prototype.accidentalToUnicode = function(t3) {
    return t3.toString().replace(/#/g, "♯").replace(/b/g, "♭");
  }, e2.prototype.createLabel = function(t3) {
    this._label = this.container.group(), this._labelText = this._label.text("" + this.displayNote.note + (this.displayNote.accidental ? this.accidentalToUnicode(this.displayNote.accidental) : "")).fill(t3).font({ family: "Helvetica", size: this.width / 2, anchor: "middle" }), this._label.attr("pointer-events", "none"), this.layout(), "always" !== this.instrumentSettings.showNoteNames && this._label.hide();
  }, e2.prototype.updateLabel = function() {
    this._labelText && (this._labelText.text("" + this.displayNote.note + (this.displayNote.accidental ? this.accidentalToUnicode(this.displayNote.accidental) : "")), this.layout());
  }, e2.prototype.createHighlight = function(t3) {
    this.highlightSize = t3, this._highlight = this.container.circle(this.highlightSize), this._highlight.center(0.5, 0.5), this._highlight.attr("pointer-events", "none");
    var e3 = this.instrumentSettings.highlightColor, i2 = this.instrumentSettings.specialHighlightColor, n2 = this.container.gradient("radial", function(t4) {
      t4.stop(0, "#fff"), t4.stop(1, e3);
    });
    n2.attr({ cx: 0.4, cy: 0.4 });
    var s2 = this.container.gradient("radial", function(t4) {
      t4.stop(0, "#fff"), t4.stop(1, i2);
    });
    s2.attr({ cx: 0.4, cy: 0.4 }), this._highlight.fill(this.isSpecialHighlighted ? s2 : n2), this.layout();
  }, e2.prototype.layout = function() {
    var t3, e3, i2;
    null === (t3 = this._visual) || void 0 === t3 || t3.size(this.width, this.height), this._label && this._labelText && (this._labelText.font({ size: this.width / 2 }), null === (e3 = this._label) || void 0 === e3 || e3.untransform(), null === (i2 = this._label) || void 0 === i2 || i2.translate(this.width / 2, this.height - 2 * this._labelText.bbox().height), "onhighlight" === this.instrumentSettings.showNoteNames && (this.isHighlighted ? this._label.show() : this._label.hide())), this._highlight && (this._highlight.radius(this.highlightSize).untransform().translate(this.width / 2, 4 * this.highlightSize), this.isHighlighted ? this._highlight.show() : this._highlight.hide());
  }, e2.prototype.getNoteIfHighlighted = function(t3) {
    var e3 = void 0 !== this.note.baseNote ? this.note.baseNote : this.note;
    return t3.find(function(t4) {
      var i2 = void 0 !== t4.baseNote ? t4.baseNote : t4;
      return i2.note === e3.note && i2.accidental === e3.accidental && (i2.octave === e3.octave || void 0 === i2.octave);
    });
  }, e2;
}(Xe);
var Ve = function(t2) {
  function e2(e3, i2, n2, s2, r2, h2) {
    return t2.call(this, e3, i2, n2, s2, h2, h2 * Ue.WHITE_KEY_RATIO, r2) || this;
  }
  return Ye(e2, t2), e2.prototype.create = function() {
    this._visual = this.container.rect(this.width, this.height).fill("#fff").stroke({ color: "#000", width: 2 }), this.createLabel("#000"), this.createHighlight(this.width / Ue.WHITE_BLACK_WIDTH_RATIO / 8), this.addMouseListeners();
  }, e2.prototype.resize = function(t3) {
    this.width = t3, this.height = t3 * Ue.WHITE_KEY_RATIO, this.layout();
  }, e2.prototype.press = function(e3) {
    var i2, n2;
    "subtle" === this.instrumentSettings.keyPressStyle ? (n2 = this.container.gradient("linear", function(t3) {
      t3.stop(0, "#fff"), t3.stop(1, "#e8e8e8");
    })).attr({ x1: 0, y1: 0, x2: 0, y2: 1 }) : n2 = this.instrumentSettings.vividKeyPressColor, this.isPressed || (t2.prototype.press.call(this, e3), null === (i2 = this._visual) || void 0 === i2 || i2.fill(n2).transform({ origin: { x: this.width / 2, y: 0 }, skewX: 0.3 }));
  }, e2.prototype.release = function() {
    var e3;
    this.isPressed && (t2.prototype.release.call(this), null === (e3 = this._visual) || void 0 === e3 || e3.fill("#fff").untransform());
  }, e2;
}(Ge);
var $e = function(t2) {
  function e2(e3, i2, n2, s2, r2, h2, o2) {
    var a2 = t2.call(this, e3, i2, n2, s2, o2, o2 * Ue.BLACK_KEY_RATIO, r2) || this;
    return a2._baseWhiteKey = h2, a2;
  }
  return Ye(e2, t2), Object.defineProperty(e2.prototype, "baseWhiteKey", { get: function() {
    return this._baseWhiteKey;
  }, enumerable: true, configurable: true }), e2.prototype.create = function() {
    this._visual = this.container.rect(this.width, this.height).fill("#000").stroke({ color: "#000", width: 2 }), this.createLabel("#fff"), this.createHighlight(this.width / 8), this.addMouseListeners();
  }, e2.prototype.resize = function(t3) {
    this.width = t3, this.height = t3 * Ue.BLACK_KEY_RATIO, this.layout();
  }, e2.prototype.press = function(e3) {
    var i2, n2;
    "subtle" === this.instrumentSettings.keyPressStyle ? (n2 = this.container.gradient("linear", function(t3) {
      t3.stop(0, "#000"), t3.stop(1, "#555");
    })).attr({ x1: 0, y1: 0, x2: 0, y2: 1 }) : (n2 = (n2 = new tt(this.instrumentSettings.vividKeyPressColor)).hsl()).l /= 1.2, this.isPressed || (t2.prototype.press.call(this, e3), null === (i2 = this._visual) || void 0 === i2 || i2.fill(n2));
  }, e2.prototype.release = function() {
    var e3;
    this.isPressed && (t2.prototype.release.call(this), null === (e3 = this._visual) || void 0 === e3 || e3.fill("#000"));
  }, e2;
}(Ge);
var Qe = function(t2) {
  function e2(e3, i2, n2, s2, r2, h2, o2, a2) {
    var u2 = t2.call(this, e3, i2, n2, s2) || this;
    return u2.whiteKeys = [], u2.blackKeys = [], u2.LABEL_SIZE_RATIO = 30, u2.container = e3, u2._octave = r2, u2.startNote = h2, u2.endNote = o2, u2.whiteKeyWidth = a2, u2.whiteKeyHeight = u2.whiteKeyWidth * Ue.WHITE_KEY_RATIO, u2;
  }
  return Ye(e2, t2), Object.defineProperty(e2.prototype, "octave", { get: function() {
    return this._octave;
  }, enumerable: true, configurable: true }), e2.prototype.create = function() {
    for (var t3 = false, e3 = Ue.NOTE_LIST.indexOf(this.startNote); e3 <= Ue.NOTE_LIST.indexOf(this.endNote); e3++) {
      var i2 = Ue.NOTE_LIST[e3], n2 = new Ve(this.container.group(), this.instrumentSettings, this.onKeyPress, this.onKeyRelease, new Be({ note: i2, octave: this._octave }), this.whiteKeyWidth);
      if (n2.create(), this.whiteKeys.push(n2), t3 && n2.backward(), t3 = false, Ue.BLACK_BASE_NOTE_LIST.indexOf(i2) > -1 && (i2 !== this.endNote || "B" === this.endNote)) {
        var s2 = new $e(this.container.group(), this.instrumentSettings, this.onKeyPress, this.onKeyRelease, new Be({ note: i2, accidental: "#", octave: this._octave }), n2, this.whiteKeyWidth / Ue.WHITE_BLACK_WIDTH_RATIO);
        s2.create(), this.blackKeys.push(s2), t3 = true;
      }
    }
    this.createOctaveNumberLabel();
  }, e2.prototype.layout = function(t3) {
    var e3, i2, n2 = this;
    this.whiteKeyWidth = t3, this.whiteKeyHeight = this.whiteKeyWidth * Ue.WHITE_KEY_RATIO;
    var s2 = 0;
    this.whiteKeys.forEach(function(t4) {
      t4.resize(n2.whiteKeyWidth), t4.move(s2, 0), s2 += t4.boxWidth;
      var e4 = n2.blackKeys.find(function(e5) {
        return e5.baseWhiteKey === t4;
      });
      e4 && (e4.resize(n2.whiteKeyWidth / Ue.WHITE_BLACK_WIDTH_RATIO), e4.move(s2 - e4.boxWidth / 2, 0));
    }), this._label && this._labelText && (this._labelText.font({ size: this.whiteKeyHeight / this.LABEL_SIZE_RATIO }), null === (e3 = this._label) || void 0 === e3 || e3.untransform(), null === (i2 = this._label) || void 0 === i2 || i2.translate(this.whiteKeyHeight / this.LABEL_SIZE_RATIO / 2, this.whiteKeyHeight - 1.5 * this._labelText.bbox().height), this.instrumentSettings.showOctaveNumbers ? this._label.show() : this._label.hide());
  }, Object.defineProperty(e2.prototype, "numberOfWhiteKeys", { get: function() {
    return Ue.NOTE_LIST.indexOf(this.endNote) - Ue.NOTE_LIST.indexOf(this.startNote) + 1;
  }, enumerable: true, configurable: true }), e2.prototype.keyDown = function(t3) {
    var e3 = new Be(t3).baseNote;
    if (void 0 === e3.accidental) (i2 = this.whiteKeys.find(function(t4) {
      return t4.note.note === e3.note;
    })) && i2.press(t3);
    else if ("#" === e3.accidental) {
      var i2;
      (i2 = this.blackKeys.find(function(t4) {
        return t4.note.note === e3.note;
      })) && i2.press(t3);
    }
  }, e2.prototype.keyUp = function(t3) {
    var e3 = new Be(t3).baseNote;
    if (void 0 === e3.accidental) (i2 = this.whiteKeys.find(function(t4) {
      return t4.note.note === e3.note;
    })) && i2.release();
    else if ("#" === e3.accidental) {
      var i2;
      (i2 = this.blackKeys.find(function(t4) {
        return t4.note.note === e3.note;
      })) && i2.release();
    }
  }, e2.prototype.setInstrumentSettings = function(e3) {
    t2.prototype.setInstrumentSettings.call(this, e3), this.whiteKeys.forEach(function(t3) {
      return t3.setInstrumentSettings(e3);
    }), this.blackKeys.forEach(function(t3) {
      return t3.setInstrumentSettings(e3);
    });
  }, e2.prototype.createOctaveNumberLabel = function() {
    this._label = this.container.group(), this._labelText = this._label.text("" + this.octave).fill("#000").font({ family: "Helvetica", size: this.whiteKeyHeight / this.LABEL_SIZE_RATIO, anchor: "left" }), this._label.attr("pointer-events", "none");
  }, e2;
}(Xe);
var Ze = function(t2) {
  function e2(e3, i2, n2, s2, r2, h2) {
    var o2 = t2.call(this, e3, h2, i2, n2) || this;
    return o2.octaves = [], o2.availableWidth = s2, o2.availableHeight = r2, o2.instrumentSettings = h2, o2;
  }
  return Ye(e2, t2), e2.prototype.create = function() {
    for (var t3 = this.instrumentSettings.startOctave; t3 <= this.instrumentSettings.endOctave; t3++) {
      var e3 = new Qe(this.container.group(), this.instrumentSettings, this.onKeyPress, this.onKeyRelease, t3, t3 === this.instrumentSettings.startOctave ? this.instrumentSettings.startNote : "C", t3 === this.instrumentSettings.endOctave ? this.instrumentSettings.endNote : "B", this.whiteKeyWidth);
      e3.create(), this.octaves.push(e3);
    }
  }, e2.prototype.layout = function(t3, e3) {
    var i2 = this;
    this.availableWidth = t3, this.availableHeight = e3;
    var n2 = 0;
    this.octaves.forEach(function(t4) {
      t4.layout(i2.whiteKeyWidth), t4.move(n2, 0), n2 += t4.boxWidth;
    });
  }, Object.defineProperty(e2.prototype, "numberOfWhiteKeys", { get: function() {
    for (var t3 = 0, e3 = Ue.NOTE_LIST, i2 = this.instrumentSettings.startOctave; i2 <= this.instrumentSettings.endOctave; i2++) i2 === this.instrumentSettings.startOctave ? this.instrumentSettings.endOctave > this.instrumentSettings.startOctave ? t3 += 7 - e3.indexOf(this.instrumentSettings.startNote) : t3 = e3.indexOf(this.instrumentSettings.endNote) - e3.indexOf(this.instrumentSettings.startNote) + 1 : i2 === this.instrumentSettings.endOctave ? t3 += e3.indexOf(this.instrumentSettings.endNote) + 1 : t3 += 7;
    return t3;
  }, enumerable: true, configurable: true }), Object.defineProperty(e2.prototype, "whiteKeyWidth", { get: function() {
    var t3 = this.availableWidth / this.numberOfWhiteKeys;
    return t3 * Ue.WHITE_KEY_RATIO <= this.availableHeight ? t3 : this.availableHeight / Ue.WHITE_KEY_RATIO;
  }, enumerable: true, configurable: true }), e2.prototype.keyDown = function(t3) {
    if (this.octaves.length > 0 && void 0 !== t3.octave) {
      var e3 = new Be(t3), i2 = this.octaves.find(function(t4) {
        return t4.octave === e3.baseNote.octave;
      });
      i2 && i2.keyDown(t3);
    }
  }, e2.prototype.keyUp = function(t3) {
    if (this.octaves.length > 0 && void 0 !== t3.octave) {
      var e3 = this.octaves.find(function(e4) {
        return e4.octave === t3.octave;
      });
      e3 && e3.keyUp(t3);
    }
  }, e2.prototype.setInstrumentSettings = function(e3) {
    t2.prototype.setInstrumentSettings.call(this, e3), this.octaves.forEach(function(t3) {
      return t3.setInstrumentSettings(e3);
    });
  }, e2;
}(Xe);
var Je = function() {
  function t2(t3) {
    this.startOctave = 2, this.startNote = "C", this.endOctave = 6, this.endNote = "C", this.showNoteNames = "onpress", this.highlightedNotes = [], this.highlightColor = "#0c0", this.specialHighlightedNotes = [], this.specialHighlightColor = "#f00", this.showOctaveNumbers = false, this.keyPressStyle = "subtle", this.vividKeyPressColor = "#f33", this._reloadNeeded = false, this.applySettings(t3);
  }
  return Object.defineProperty(t2.prototype, "reloadNeded", { get: function() {
    return this._reloadNeeded;
  }, enumerable: true, configurable: true }), t2.prototype.applySettings = function(t3) {
    var e2 = this;
    this._reloadNeeded = false, void 0 !== t3 && (void 0 !== t3.startOctave && (this.startOctave = t3.startOctave, this._reloadNeeded = true), void 0 !== t3.startNote && (this.startNote = t3.startNote, this._reloadNeeded = true), void 0 !== t3.endOctave && (this.endOctave = t3.endOctave, this._reloadNeeded = true), void 0 !== t3.endNote && (this.endNote = t3.endNote, this._reloadNeeded = true), void 0 !== t3.showNoteNames && (this.showNoteNames = t3.showNoteNames, this._reloadNeeded = true), void 0 !== t3.highlightedNotes && (this.highlightedNotes.splice(0), t3.highlightedNotes.forEach(function(t4) {
      return e2.highlightedNotes.push(new Be(t4));
    })), void 0 !== t3.highlightColor && (this.highlightColor = t3.highlightColor), void 0 !== t3.specialHighlightedNotes && (this.specialHighlightedNotes.splice(0), t3.specialHighlightedNotes.forEach(function(t4) {
      return e2.specialHighlightedNotes.push(new Be(t4));
    })), void 0 !== t3.specialHighlightColor && (this.specialHighlightColor = t3.specialHighlightColor), void 0 !== t3.showOctaveNumbers && (this.showOctaveNumbers = t3.showOctaveNumbers), void 0 !== t3.keyPressStyle && (this.keyPressStyle = t3.keyPressStyle), void 0 !== t3.vividKeyPressColor && (this.vividKeyPressColor = t3.vividKeyPressColor));
  }, t2;
}();
var ti = function() {
  function t2(t3, e2) {
    this.keyPressEventHandlers = [], this.keyReleaseEventHandlers = [], this.resizeCounter = 0, this.container = t3, this.settings = new Je(e2), this.create = this.create.bind(this), this.layout = this.layout.bind(this), this.keyDown = this.keyDown.bind(this), this.keyUp = this.keyUp.bind(this), this.destroy = this.destroy.bind(this), this.handleMouseKeyDown = this.handleMouseKeyDown.bind(this), this.handleMouseKeyUp = this.handleMouseKeyUp.bind(this), this.handleResize = this.handleResize.bind(this), this.reload = this.reload.bind(this);
  }
  return t2.prototype.create = function() {
    this.img = qe().addTo(this.container).size("100%", "100%"), this.img.css("-ms-user-select", "none"), this.img.css("-webkit-user-select", "none"), this.img.css("-moz-user-select", "none"), this.img.css("user-select", "none"), this.keybed = new Ze(this.img.group(), this.handleMouseKeyDown, this.handleMouseKeyUp, this.container.clientWidth, this.container.clientHeight, this.settings), this.keybed.create(), this.layout(), window.addEventListener("resize", this.handleResize);
  }, t2.prototype.destroy = function() {
    this.container.removeChild(this.img.node), window.removeEventListener("resize", this.handleResize);
  }, t2.prototype.keyDown = function(t3) {
    this.keybed && this.keybed.keyDown(new Be(t3));
  }, t2.prototype.keyUp = function(t3) {
    this.keybed && this.keybed.keyUp(new Be(t3));
  }, t2.prototype.addKeyMouseDownListener = function(t3) {
    this.keyPressEventHandlers.push(t3);
  }, t2.prototype.addKeyMouseUpListener = function(t3) {
    this.keyReleaseEventHandlers.push(t3);
  }, t2.prototype.removeKeyMouseDownListener = function(t3) {
    void 0 !== t3 ? this.keyPressEventHandlers.indexOf(t3) > -1 && this.keyPressEventHandlers.splice(this.keyPressEventHandlers.indexOf(t3), 1) : this.keyPressEventHandlers.splice(0);
  }, t2.prototype.removeKeyMouseUpListener = function(t3) {
    void 0 !== t3 ? this.keyReleaseEventHandlers.indexOf(t3) > -1 && this.keyReleaseEventHandlers.splice(this.keyReleaseEventHandlers.indexOf(t3), 1) : this.keyReleaseEventHandlers.splice(0);
  }, t2.prototype.reload = function() {
    this.destroy(), this.create();
  }, t2.prototype.applySettings = function(t3) {
    this.settings.applySettings(t3), this.settings.reloadNeded ? this.reload() : (this.keybed && this.keybed.setInstrumentSettings(this.settings), this.layout());
  }, t2.prototype.handleResize = function() {
    var t3 = this;
    this.resizeCounter++, setTimeout(function() {
      t3.resizeCounter--, t3.resizeCounter <= 0 && t3.layout();
    }, 300);
  }, t2.prototype.layout = function() {
    this.img && this.keybed && (this.img.size("100%", "100%"), this.keybed.layout(this.container.clientWidth, this.container.clientHeight), this.img.width(this.keybed.boxWidth).height(this.keybed.boxHeight));
  }, t2.prototype.handleMouseKeyDown = function(t3) {
    this.keyPressEventHandlers.forEach(function(e2) {
      return e2(t3);
    });
  }, t2.prototype.handleMouseKeyUp = function(t3) {
    this.keyReleaseEventHandlers.forEach(function(e2) {
      return e2(t3);
    });
  }, t2.prototype.rasterize = function(t3, e2) {
    var i2 = document.createElement("canvas"), n2 = document.createElement("div"), s2 = qe().addTo(n2).svg(this.img.svg()).size(this.img.width(), this.img.height());
    if (e2) {
      var r2 = s2.root().group();
      r2.text(e2).fill("#888").font({ family: "Helvetica", size: 12, anchor: "start" }), s2.height(s2.height() + r2.height() + 6), r2.translate(s2.width() - r2.width() - 6, s2.height() - 6);
    }
    i2.width = s2.width(), i2.height = s2.height();
    var h2 = s2.svg(), o2 = i2.getContext("2d"), a2 = window.URL, u2 = new Image(i2.width, i2.height);
    u2.setAttribute("crossOrigin", "anonymous");
    var l2 = new Blob([h2], { type: "image/svg+xml" }), c2 = a2.createObjectURL(l2);
    u2.onload = function() {
      o2.drawImage(u2, 0, 0), a2.revokeObjectURL(c2), t3(i2.toDataURL("image/png"));
    }, u2.src = c2;
  }, t2;
}();
var ei = function() {
  function t2(t3, e2) {
    this.notes = [], this.notes = t3, this.mode = e2;
  }
  return Object.defineProperty(t2.prototype, "root", { get: function() {
    return this.notes.length > 0 ? this.notes[0] : { note: "C" };
  }, enumerable: true, configurable: true }), t2;
}();
var ii = function() {
  function t2() {
  }
  return t2.getScale = function(e2, i2) {
    var n2 = new Be(e2).baseNote, s2 = t2.chromatic.notes.findIndex(function(t3) {
      return n2.note === t3.note && n2.accidental === t3.accidental;
    }), r2 = t2.modeSteps.get(i2), h2 = [];
    if (void 0 !== r2) {
      h2.push(n2);
      for (var o2 = s2, a2 = 0; a2 < r2.length; a2++) o2 = (o2 + r2[a2]) % 12, h2.push(t2.chromatic.notes[o2]);
    }
    return new ei(t2.adjustScale(e2, h2), i2);
  }, t2.adjustScale = function(e2, i2) {
    var n2 = [];
    return i2.forEach(function(i3) {
      if ("b" === e2.accidental && "#" === i3.accidental) {
        var s2 = t2.chromatic.notes.findIndex(function(t3) {
          return t3.note === i3.note && t3.accidental === i3.accidental;
        });
        n2.push({ note: t2.chromatic.notes[s2 + 1].note, accidental: "b" });
      } else n2.push(i3);
    }), n2;
  }, t2.chromatic = new ei([new Be("C"), new Be("C#"), new Be("D"), new Be("D#"), new Be("E"), new Be("F"), new Be("F#"), new Be("G"), new Be("G#"), new Be("A"), new Be("A#"), new Be("B")], "chromatic"), t2.modeSteps = /* @__PURE__ */ new Map([["major", [2, 2, 1, 2, 2, 2, 1]], ["minor", [2, 1, 2, 2, 1, 2, 2]], ["dorian", [2, 1, 2, 2, 2, 1, 2]], ["phrygian", [1, 2, 2, 2, 1, 2, 2]], ["lydian", [2, 2, 2, 1, 2, 2, 1]], ["mixolydian", [2, 2, 1, 2, 2, 1, 2]], ["locrian", [1, 2, 2, 1, 2, 2, 2]], ["majorpentatonic", [2, 2, 3, 2, 3]], ["minorpentatonic", [3, 2, 2, 3, 2]], ["harmonicminor", [2, 1, 2, 2, 1, 3, 1]], ["melodicminor", [2, 1, 2, 2, 2, 2, 1]]]), t2;
}();
export {
  ti as Instrument,
  Be as NoteValue,
  Ue as PianoData,
  ei as Scale,
  ii as ScaleHelper
};
/*! Bundled license information:

piano-chart/piano-chart.esm.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation. All rights reserved.
  Licensed under the Apache License, Version 2.0 (the "License"); you may not use
  this file except in compliance with the License. You may obtain a copy of the
  License at http://www.apache.org/licenses/LICENSE-2.0
  
  THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
  MERCHANTABLITY OR NON-INFRINGEMENT.
  
  See the Apache Version 2.0 License for specific language governing permissions
  and limitations under the License.
  ***************************************************************************** *)
*/
//# sourceMappingURL=piano-chart.js.map
